package Api;

//import org.junit.Test;

import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
//import com.sun.xml.internal.ws.client.sei.ResponseBuilder.Body;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.databind.node.JsonNodeFactory;

//import io.restassured.response.Response;
import static io.restassured.RestAssured.*;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.lang.reflect.Method;
import java.net.UnknownHostException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.TimeUnit;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;


import io.restassured.http.ContentType;
import io.restassured.http.Header;
import io.restassured.response.Response;
import io.restassured.response.ResponseOptions;

import org.json.simple.JSONObject;



public class TestData {
	
	//public static ExtentTest WriteExtentReport;
	//public static ExtentTest test;
	public static int iAccountServicesPass=0;
	public static int iAccountServicesFail=0;
	public static int iCardServicesPass=0;
	public static int iCardServicesFail=0;
	
	/*public static int iPaymentServicesPass=0;
	public static int iPaymentServicesFail=0;
	public static int iProfileServicesPass=0;
	public static int iProfileServicesFail=0;
	public static int iOtherServicesPass=0;
	public static int iOtherServicesFail=0;*/
	public static String sTokenkey = "";//"4f6351e5959fc2cbac38ed0760289517522893b9162b84ee9a7f043f5d286059";
	static String saveDirectory = "C://Users//xaatars//Desktop//Shahrukh";
	static ArrayList<String> ApiIds = new ArrayList<String>();

	private static void getExcelData()
	{

		
		String filename = saveDirectory + "//" + "TestData1.xlsx";
		XSSFSheet applicationSheet = null;

		int appIdIndex = 0;
		String appValue=null;
		

		try
		{

			// Creating File Instance and Reading File...

			File file = new File(filename);
			FileInputStream fis = new FileInputStream(file);

			// Creating instance to move Excel File...

			XSSFWorkbook workbook = new XSSFWorkbook(fis);

			// Getting Expected Sheet To Read Content..

			for(int i = 0; i < workbook.getNumberOfSheets(); i++)
			{
				if(workbook.getSheetName(i).equals("Sheet1"))
				{
					applicationSheet = workbook.getSheetAt(i);
					System.out.println(applicationSheet.getSheetName());
					break;
				}
			}
		}
		catch(Exception e)
		{
			System.out.println("Exception is :" + e);
		}

		// Gets Rows of Sheet named Application...
		Iterator<Row> rows = applicationSheet.iterator();

		row: while(rows.hasNext())
		{
			// Get One by one row....

			Row row = rows.next();

			// Get all cell of particular row...

			Iterator<Cell> cells = row.cellIterator();

			if(row.getRowNum() > 0)
			{
				column: while(cells.hasNext())
				{
					Cell cell = cells.next();
					int cellIndex = cell.getColumnIndex();

					if(cellIndex == appIdIndex)
					{
						System.out.println(cell.getRowIndex());
						switch(cell.getCellType())
						{
						case Cell.CELL_TYPE_STRING : // field that represents
							appValue = cell.getStringCellValue();
							System.out.println(appValue);
							ApiIds.add(appValue);
							break;

						case Cell.CELL_TYPE_NUMERIC :
							appValue = "0.0";
							break;

						default :
							break;
						}
					}

				}
			}
			else
			{
				while(cells.hasNext())
				{
					Cell cell = cells.next();

					if(cell.getCellType() == cell.CELL_TYPE_STRING)
					{
						if(cell.getStringCellValue().equals("ApiID"))
						{
							appIdIndex = cell.getColumnIndex();
							break;
						}
						else
						{
							System.out.println("No match found...");
						}
					}

				}
			}
		}
	}

	
	
	public static void main(String[] args) throws Exception {
		
		
		
		
		/*File src = new File("C://Users//xaatars//Desktop//Shahrukh//TestData.xlsx");
		FileInputStream fis=new FileInputStream(src);
		XSSFWorkbook wb=new XSSFWorkbook(fis);
		XSSFSheet sheet1=wb.getSheetAt(1);
		for(int i=1;i<=10;i++)
		{
			String sRequest32= sheet1.getRow(i).getCell(1).getStringCellValue();
			
			API_32("Api_32_"+i+"(updateRetailProspects-KFS Consents and Declarations)");
		}
		
		
		
		wb.close();*/
		
		//

		while(true)
		{
			Date sDate = new Date();
			int iHour = sDate.getHours();
			int iMinut = sDate.getMinutes();
			if(iHour==9){
				if(iMinut==9)
			{
				Apis();
				break;
			}
			}
			System.out.println(iHour);
			//Thread.sleep(300*1000);
			//Thread.sleep(300*1000);
			//Thread.sleep(300*1000);
			Thread.sleep(15000);
			
		}
		
	}
	
	

	public static void Apis() throws IOException {
		
		getExcelData();
		
		/*Response response = given()
				.contentType("application/json")
				.accept("application/json")
				.header("Authorization","1ecd8f5fd892a41459c4886c68f6184f29e145f989eaa26071de5ebc12c28d93")
				//.body(userDetails)
				.when()
				.get("http://10.15.24.32:8096/dehRetail/rest/v1/banks/RAK/retail/products/cards/codereferences/datalist")
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		System.out.println(response.getStatusCode());*/
		
		
		/*Map<String,Object> userDetails = new HashMap<>();
		userDetails.put("grant_type", "password");
		userDetails.put("username", "VTUSER");
		userDetails.put("password", "p@king1");
		userDetails.put("client_id", "0e50fbe72ae115ae5812");
		userDetails.put("bank_id", "RAK");
		userDetails.put("channel_id", "I");
		userDetails.put("client_secret", "693916a12ad010cb79b064b0f35d76405cb3df588a8280ae49ac2eec7f2c");
		userDetails.put("language_id", "001");
		userDetails.put("login_flag", "2");
		userDetails.put("login_type", "1");
		userDetails.put("statemode", "N");
		userDetails.put("refresh_token", "e998961112ab485d51384c433cf2eafc042490597ebc76e7607327217b5a28f9");*/
		Header header = new Header("Content-Type","application/x-www-form-urlencoded");
		Response response = given()
				//.with().auth().preemptive()
				//.basic("xaatars", "Hasanw@123456")
				//.contentType("application/x-www-form-urlencoded")
				//.contentType(ContentType.URLENC)
				//.accept("application/json")
				.header("Content-Type","application/x-www-form-urlencoded;charset=utf-8")
				//.header("User-Agent","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome 79.0.3945.88 Safari/537.36")
				//.header("Authorization","8f6eb5b6681004d91b0464661d0440becf3302cf09508ea6518d246bd0af2ba9")
				//.body(userDetails)
				/*.body("{\r\n" + 
						"\"grant_type\":\"password\",\r\n" + 
						"\"username\":\"VTUSER\",\r\n" + 
						"\"password\": \"p@king1\",\r\n" + 
						"\"client_id\": \"0e50fbe72ae115ae5812\",\r\n" + 
						"\"bank_id\":\"RAK\",\r\n" + 
						"\"channel_id\":\"I\",\r\n" + 
						"\"client_secret\":\"693916a12ad010cb79b064b0f35d76405cb3df588a8280ae49ac2eec7f2c\",\r\n" + 
						"\"language_id\": \"001\",\r\n" + 
						"\"login_flag\":\"2\",\r\n" + 
						"\"login_type\":\"1\",\r\n" + 
						"\"statemode\":\"N\",\r\n" + 
						"\"refresh_token\":\"e998961112ab485d51384c433cf2eafc042490597ebc76e7607327217b5a28f9\"\r\n" + 
						"\r\n" + 
						"}	\r\n" + 
						"")*/
				.formParam("grant_type", "password")
				.formParam("username", "VTUSER")
				.formParam("password", "p@king1")
				.formParam("client_id", "0e50fbe72ae115ae5812")
				.formParam("bank_id", "RAK")
				.formParam("channel_id", "I")
				.formParam("client_secret", "693916a12ad010cb79b064b0f35d76405cb3df588a8280ae49ac2eec7f2c")
				.formParam("language_id", "001")
				.formParam("login_flag", "2")
				.formParam("login_type", "1")
				.formParam("statemode", "N")
				.formParam("refresh_token", "e998961112ab485d51384c433cf2eafc042490597ebc76e7607327217b5a28f9")
				.when()
				//.header(header).request()
				.post("http://10.15.24.34:8087/openAuth/v2/oauth/token");
				//.then()
				//.statusCode(200)
				//.contentType("application/json")
				//.extract()
				//.response();
		
		//System.out.println(response.asString());
		sTokenkey = response.jsonPath().getString("access_token");
		System.out.println(sTokenkey);
		
		/*File src =new File("C://Users//xaatars//Desktop//Shahrukh//TestData.xlsx");
		FileInputStream fis=new FileInputStream(src);
		XSSFWorkbook wb=new XSSFWorkbook(fis);
		XSSFSheet sheet1=wb.getSheetAt(0);
		String sRequest1= sheet1.getRow(1).getCell(1).getStringCellValue();
		String sRequest2= sheet1.getRow(2).getCell(1).getStringCellValue();
		
		String fullName= sheet1.getRow(2).getCell(2).getStringCellValue();
		String emailID= sheet1.getRow(2).getCell(3).getStringCellValue();
		String countryCode= sheet1.getRow(2).getCell(4).getStringCellValue();
		String mobileNo= sheet1.getRow(2).getCell(5).getStringCellValue();
		String prodCategory= sheet1.getRow(2).getCell(6).getStringCellValue();
		String personOfDetermination= sheet1.getRow(2).getCell(7).getStringCellValue();
		String typeOfDisability= sheet1.getRow(2).getCell(8).getStringCellValue();
		String disabilityRemarks= sheet1.getRow(2).getCell(9).getStringCellValue();
		String language= sheet1.getRow(2).getCell(10).getStringCellValue();
		String agentCode= sheet1.getRow(2).getCell(11).getStringCellValue();
		String viewId= sheet1.getRow(2).getCell(12).getStringCellValue();*/
		
		Framework.getreportfilename();
		Framework.statextentreport();
		Framework.createhtmlreportdesign();
		//API_static();
		
		for(int i=0; i<ApiIds.size(); i++ )
		{
			for(int k=0; k<ApiIds.size(); k++ )
			{
				String Apiid=ApiIds.get(i);
				int j=k+1;
				String value="";
				if(j<=9)
				{
					 value="0"+String.valueOf(j);
				}
				else {
					 value=String.valueOf(j);	
				}
					
				
				if(Apiid.contains(value))
				{
					try
			        {
			            TestData test = new TestData();
			            Class classobj = TestData.class;
			            Method [] methods = classobj.getMethods();
			            for(Method method : methods)
			            {
			                String MethodName = method.getName();
			               
			            
			                if(MethodName.contains(value))
			                {
			                	 System.out.println("Name of the method: " + MethodName);
			                    method.invoke(test, Apiid);
			                   
			                }
			            }
			        }
			        catch(Exception e)
			        {
			            
			        	System.out.println("Exception thrown is: " + e);
			        	
			        }
					break;

					
				}
			}
			
		}
		try
		{
			//API_12();//complete
			 //APIA();
			//aa();
			
			
			
			/*API_01("Api_01(dataList)");//complete
			API_02("Api_02(Create Prospect)");//complete
			API_03("Api_03(Search Prospect)");//complete
			API_04("Api_04(data list of employment)");//complete
			API_05("Api_05(Get the Document List)");//complete	
			API_06("Api_06(Update Card Prospects Card Selected)");//complete
			API_07("Api_07(Update Card Prospects Emp Details)");//complete
			API_08("Api_08(updateCardProspects efrdeatils)");//complete
			API_09("Api_09(updateCardProspects)");//complete
			API_10("Api_10(Generate OTP)");//complete
			API_11("Api_11(Resend OTP)");//complete
			API_12("Api_12( Verify OTP)");//complete
			//API();
			API_13("Api_13(Update Card Prospects Home Country Address details)");//complete
			API_14("Api_14(Update Card Prospects Residential Address details)");//complete
			API_15("Api_15(Update Card Prospects office Address details)");//complete
			API_16("Api_16(updateCardProspects MARKETINGConsent)");//complete
			API_17("Api_17(updateCardProspects TandCConsent)");//complete
			API_18("Api_18(updateCardProspects AECBConsent)");//complete
			API_19("Api_19(updateCardProspects FTSConsent)");//complete
			API_20("Api_20(Get the data for list accout services)");//complete
			API_21("Api_21(createProspect)");//complete
			API_22("Api_22(Search Prospect)");////complete
			API_23("Api_23(updateProspect PATCH-ProductInfo)");//complete
		    API_24("Api_24(updateRetailProspects-KFS Consent)");//complete
			API_25("Api_25(updateProspect PATCH-KycInfo)"); //complete
			API_26("Api_26(updateProspect PATCH-Pep-1 (PEPAssociationView))");// complete but 3 empty field not added in body
			API_27("Api_27(updateProspect PATCH-Pep -2)");//complete
			API_28("Api_28(updateProspect PATCH-Employment  Salaried)");//complete
			API_29("Api_29(updateProspect PATCH-Employment Self Employed)");//complete
			API_30("Api_30(updateProspect - Address)");//complete
			API_31("Api_31(updateRetailProspects-FATCAandCRS)");
			API_32("Api_32(updateRetailProspects-KFS Consents and Declarations)");
			API_33("Api_33(BackgroundQuestions NEW Views - income view)");
			API_34("Api_34(BackgroundQuestions NEW Views - self employedview)");
			API_35("Api_35(BackgroundQuestions NEW Views - salaried view)");
			API_36("Api_36(updateCardProspects FriendDetails)");
			API_37("Api_37(updateCardProspects FATCAdetails)");
			API_38("Api_38(updateCardProspects personalDetails)");
			API_39("Api_39(updateCardProspects AcquisitionOfferDetails)");
			API_40("Api_40(updateCardProspects CreditShield RAKprotect)");
			API_41("Api_41(updateCardProspects IPAAmount)");
			API_42("Api_42(updateCardProspects LifeStyleQues)");
			API_43("Api_43(updateCardProspects coolingPeriod)");*/
			/*File src = new File("C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx");
			FileInputStream fis=new FileInputStream(src);
			XSSFWorkbook wb=new XSSFWorkbook(fis);
			XSSFSheet sheet1=wb.getSheetAt(1);
			for(int i=1;i<=10;i++)
			{
				String sRequest31= sheet1.getRow(i).getCell(1).getStringCellValue();
				API_02("Api_02_"+i+"(Create Prospect)");
				
			}
			
		
			wb.close();*/
			
			
			
			
			
		}
		catch(Exception e)
		{
			e.printStackTrace();
			
		}
		
		Framework.createhtmlreportdata("Account <br>Services",iAccountServicesPass,iAccountServicesFail);
		Framework.createhtmlreportdata("Card <br>Services",iCardServicesPass,iCardServicesFail);
		/*Framework.createhtmlreportdata("Payment <br>Services",iPaymentServicesPass,iPaymentServicesFail);
		Framework.createhtmlreportdata("Profile <br>Services",iProfileServicesPass,iProfileServicesFail);
		Framework.createhtmlreportdata("Other <br>Services",iOtherServicesPass,iOtherServicesFail);*/
		
		/*Response response = get("https://reqres.in/api/users?page=2");
		System.out.println("-------------"+response.asString());
		System.out.println("-------------"+response.getBody().asString());
		System.out.println("-------------"+response.getStatusCode());
		System.out.println("-------------"+response.getStatusLine());
		System.out.println("-------------"+response.getHeader("content-type"));
		System.out.println("-------------"+response.getTime()+" Seconds");*/
		
	}
	
	//@Test
	public static void API_01(String sTestCaseidval) throws Exception
	
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_01"+"<br>"+"API Description: Get the data list"+"<br>"+"Data list should be fetched successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Get request"+"<br><br>Expected result : "+"Data list fectched successfully with responce code 200"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
	

		try {
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.when()
				.get(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	
	public static void API_02(String sTestCaseidval) throws Exception
	//public static void API_02(String sRequest2, String fullName, String emailID, String countryCode, String mobileNo, String prodCategory, String personOfDetermination, String typeOfDisability, String disabilityRemarks, String language, String agentCode,String viewId) throws Exception
	{
		
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String StringpersonOfDetermination= getColumnNumber(SPath, "personOfDetermination",sTestCaseid);
		boolean personOfDetermination =Boolean.parseBoolean(StringpersonOfDetermination);
		String fullName= getColumnNumber(SPath, "fullName",sTestCaseid);
		String emailID= getColumnNumber(SPath, "emailID",sTestCaseid);
		String countryCode= getColumnNumber(SPath, "countryCode",sTestCaseid);
		String mobileNo= getColumnNumber(SPath, "mobileNo",sTestCaseid);
		String prodCategory= getColumnNumber(SPath, "prodCategory",sTestCaseid);
		String typeOfDisability= getColumnNumber(SPath, "typeOfDisability",sTestCaseid);
		String disabilityRemarks= getColumnNumber(SPath, "disabilityRemarks",sTestCaseid);
		
		
		String language= getColumnNumber(SPath, "language",sTestCaseid);
		String agentCode= getColumnNumber(SPath, "agentCode",sTestCaseid);
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
	
		
		JSONObject body = new JSONObject();
		body.put("fullName", fullName);
		body.put("emailId", emailID);
		body.put("countryCode", countryCode);
		body.put("mobileNo", mobileNo);
		body.put("prodCategory", prodCategory);
		body.put("personOfDetermination", personOfDetermination);
		body.put("typeOfDisability",  typeOfDisability);
		body.put("disabilityRemarks", disabilityRemarks);
		body.put("language", language);
		body.put("agentCode", agentCode);
		body.put("viewId", viewId);

		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_02"+"<br>"+"API Description: Create Prospect"+"<br>"+"User should be create successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"User Created successfully with responce code 201"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		
		//System.out.println(body);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				.body(body.toJSONString())
				
				
				
				/*.body("{\r\n" + 
						"  \"fullName\": fullName,\r\n" + 
						"  \"emailId\": \"bhatabai.patil@rakbank.ae\",\r\n" + 
						"  \"countryCode\": 971,\r\n" + 
						"  \"mobileNo\": \"504963477\",\r\n" + 
						"  \"prodCategory\": \"C\",\r\n" + 
						"  \"personOfDetermination\": \"true\",\r\n" + 
						"  \"typeOfDisability\": \"others\",\r\n" + 
						"  \"disabilityRemarks\": \"test\",\r\n" + 
						"  \"language\": \"EN\",\r\n" + 
						"  \"agentCode\": \"5555\",\r\n" + 
						"  \"viewId\": \"createView\"\r\n" + 
						"}\r\n" + 
						"")*/
				.when()
				.post(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==201)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			System.out.println("1111111111111"+e);
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
		
	public static void API_03(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String fullName= getColumnNumber(SPath, "fullName",sTestCaseid);
		String emailID= getColumnNumber(SPath, "emailID",sTestCaseid);
		String countryCode= getColumnNumber(SPath, "countryCode",sTestCaseid);
		String mobileNo= getColumnNumber(SPath, "mobileNo",sTestCaseid);

		
		
		JSONObject body1 = new JSONObject();
		body1.put("fullName", fullName);
		body1.put("emailId", emailID);
		body1.put("countryCode", countryCode);
		body1.put("mobileNo", mobileNo);
		
		
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_03"+"<br>"+"API Description: Search Prospect"+"<br>"+" User Detail should be fetched successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"User Detail should be fetched successfully with responce code 200"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
	
		//Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body1.toJSONString())
				.when()
				.post(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		 
	}
		
    public static void API_04(String sTestCaseidval) throws Exception
	{

		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String StringkfdConsentDone= getColumnNumber(SPath, "kfdConsentDone",sTestCaseid);
		
    	
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_04"+"<br>"+"API Description: Get the data list of employment "+"<br>"+" Employment Data list should be fetched successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Get request"+"<br><br>Expected result : "+"Get response should be fectched successfully with responce code 200"+"<br>");
		String sRequest = sFieldValue;
		
		try {
		
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.when()
				.get(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
              }

   catch(Exception e)
   {
	Framework.CreateResults(false, "Api response code is "+e);
	iCardServicesFail = iCardServicesFail+1;
   }
		 
	}
		
	public static void API_05(String sTestCaseidval) throws Exception
	{
		
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String StringkfdConsentDone= getColumnNumber(SPath, "kfdConsentDone",sTestCaseid);
		
		
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_05"+"<br>"+"API Description: Get the Document List  "+"<br>"+" DocumentList should be fetched successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Get request"+"<br><br>Expected result : "+"Get response should be fectched successfully with responce code 200"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		try {
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.when()
				.get(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
		
	public static void API_06(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String StringkfdConsentDone= getColumnNumber(SPath, "kfdConsentDone",sTestCaseid);
		boolean kfdConsentDone=Boolean.parseBoolean(StringkfdConsentDone);
		String emailID= getColumnNumber(SPath, "emailID",sTestCaseid);
		String cardProduct= getColumnNumber(SPath, "cardProduct",sTestCaseid);
		String cardType= getColumnNumber(SPath, "cardType",sTestCaseid);
		String cardProductCode= getColumnNumber(SPath, "cardProductCode",sTestCaseid);
		String language= getColumnNumber(SPath, "language",sTestCaseid);
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
		
		JSONObject body = new JSONObject();
		body.put("emailId", emailID);
		
		
		JSONObject body1 = new JSONObject();
		body1.put("cardProduct", cardProduct); 
		body1.put("cardType", cardType);
		body1.put("cardProductCode", cardProductCode);
		body1.put("kfdConsentDone", kfdConsentDone);
		
		body.put("cardSelected", body1);
		body.put("viewId", viewId);
		body.put("language", language);
	
		
		
		System.out.println(body);
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_06"+"<br>"+"API Description: Update Card Prospects Card Selected"+"<br>"+" Card Should be Selected successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"Card Selected Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		
		try {
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
		
	public static void API_07(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String employerCode= getColumnNumber(SPath, "employerCode",sTestCaseid);
		String employerName= getColumnNumber(SPath, "employerName",sTestCaseid);
		String industry= getColumnNumber(SPath, "industry",sTestCaseid);
		String subIndustry= getColumnNumber(SPath, "subIndustry",sTestCaseid);
		String designation= getColumnNumber(SPath, "designation",sTestCaseid);
		String dateOfJoining= getColumnNumber(SPath, "dateOfJoining",sTestCaseid);
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
	
		System.out.println(dateOfJoining);
		JSONObject body = new JSONObject();
	
		
		
		JSONObject empDetails1 = new JSONObject();
		empDetails1.put("employerCode", employerCode); 
		empDetails1.put("employerName", employerName);
		empDetails1.put("industry", industry);
		empDetails1.put("subIndustry", subIndustry);
		empDetails1.put("designation", designation);
		empDetails1.put("dateOfJoining", dateOfJoining);
		body.put("empDetails", empDetails1);
		body.put("viewId", viewId);
		
		
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_07"+"<br>"+"API Description: Update Card Prospects Emp Deatils"+"<br>"+" Emp Details Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"Emp Details Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
			
		
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
		
	public static void API_08(String sTestCaseidval) throws Exception
	{
		
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String maritalStatusCode= getColumnNumber(SPath, "maritalStatusCode",sTestCaseid);
		
		String maritalStatusDescriptionEN= getColumnNumber(SPath, "maritalStatusDescriptionEN",sTestCaseid);
		String genderCode= getColumnNumber(SPath, "genderCode",sTestCaseid);
		String genderDescriptionEN= getColumnNumber(SPath, "genderDescriptionEN",sTestCaseid);
		String placeOfBirth= getColumnNumber(SPath, "placeOfBirth",sTestCaseid);
		String mothersName= getColumnNumber(SPath, "mothersName",sTestCaseid);
		String residencyNumber= getColumnNumber(SPath, "residencyNumber",sTestCaseid);
		String residencyIssuePlace= getColumnNumber(SPath, "residencyIssuePlace",sTestCaseid);
		
		String residencyIssueDate= getColumnNumber(SPath, "residencyIssueDate",sTestCaseid);
		String residencyExpiryDate= getColumnNumber(SPath, "residencyExpiryDate",sTestCaseid);
		
		String sponsorName= getColumnNumber(SPath, "sponsorName",sTestCaseid);
		String daysToExpiry= getColumnNumber(SPath, "daysToExpiry",sTestCaseid);
		String fullName= getColumnNumber(SPath, "fullName",sTestCaseid);
		
		String nationalityFull= getColumnNumber(SPath, "nationalityFull",sTestCaseid);
		String nationalityIso2= getColumnNumber(SPath, "nationalityIso2",sTestCaseid);
		String nationalityIso3= getColumnNumber(SPath, "nationalityIso3",sTestCaseid);
		String eidCardNumber= getColumnNumber(SPath, "eidCardNumber",sTestCaseid);
		
		String eidIssueDate= getColumnNumber(SPath, "eidIssueDate",sTestCaseid);
		String eidExpiryDate= getColumnNumber(SPath, "eidExpiryDate",sTestCaseid);
		
		String daysToExpiry1= getColumnNumber(SPath, "daysToExpiry",sTestCaseid);
		
		String dob= getColumnNumber(SPath, "dob",sTestCaseid);
		
		String documentNumber= getColumnNumber(SPath, "documentNumber",sTestCaseid);
		
		String documentType= getColumnNumber(SPath, "documentType",sTestCaseid);
		String expiry= getColumnNumber(SPath, "expiry",sTestCaseid);
		String firstName= getColumnNumber(SPath, "firstName",sTestCaseid);
		String fullName1= getColumnNumber(SPath, "fullName",sTestCaseid);
		String issued= getColumnNumber(SPath, "issued",sTestCaseid);
		String lastName= getColumnNumber(SPath, "lastName",sTestCaseid);
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
		String language= getColumnNumber(SPath, "language",sTestCaseid);
		String ppIssuingAuthority= getColumnNumber(SPath, "ppIssuingAuthority",sTestCaseid);

		
		System.out.println(ppIssuingAuthority);
		JSONObject body = new JSONObject();
	
		
		
		JSONObject efrDetails1 = new JSONObject();
		efrDetails1.put("maritalStatusCode", maritalStatusCode); 
		efrDetails1.put("maritalStatusDescriptionEN", maritalStatusDescriptionEN);
		efrDetails1.put("genderCode", genderCode);
		efrDetails1.put("genderDescriptionEN", genderDescriptionEN);
		efrDetails1.put("placeOfBirth", placeOfBirth);
		efrDetails1.put("mothersName", mothersName);
		efrDetails1.put("residencyNumber", residencyNumber);
		efrDetails1.put("residencyIssuePlace", residencyIssuePlace);
		efrDetails1.put("residencyIssueDate", residencyIssueDate);
		efrDetails1.put("residencyExpiryDate", residencyExpiryDate);
		efrDetails1.put("sponsorName", sponsorName);
		
		JSONObject emidDetails1 = new JSONObject();
		emidDetails1.put("daysToExpiry", daysToExpiry); 
		emidDetails1.put("fullName", fullName);
		emidDetails1.put("nationalityFull", nationalityFull);
		emidDetails1.put("nationalityIso2", nationalityIso2);
		emidDetails1.put("nationalityIso3", nationalityIso3);
		emidDetails1.put("eidCardNumber", eidCardNumber);
		emidDetails1.put("eidIssueDate", eidIssueDate);
		emidDetails1.put("eidExpiryDate", eidExpiryDate);
		
		efrDetails1.put("emidDetails", emidDetails1);
		
		JSONObject passportDetails1 = new JSONObject();
		passportDetails1.put("daysToExpiry", daysToExpiry1); 
		passportDetails1.put("dob", dob);
		passportDetails1.put("documentNumber", documentNumber);
		passportDetails1.put("documentType", documentType);
		passportDetails1.put("expiry", expiry);
		passportDetails1.put("firstName", firstName);
		passportDetails1.put("fullName", fullName1);
		passportDetails1.put("issued", issued);
		passportDetails1.put("lastName", lastName);
		passportDetails1.put("ppIssuingAuthority", ppIssuingAuthority);
		
		efrDetails1.put("passportDetails", passportDetails1);
		
		
		
		
		body.put("efrDetails", efrDetails1);
		body.put("viewId", viewId);
		body.put("language", language);
		
	
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_08"+"<br>"+"API Description: Update Card Prospects EFR Deatils"+"<br>"+" EFR Details Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"EFR Details Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		System.out.println(""+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
		
	public static void API_09(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String emailId= getColumnNumber(SPath, "emailId",sTestCaseid);
		
		String employmentType= getColumnNumber(SPath, "employmentType",sTestCaseid);
		String mobileNo= getColumnNumber(SPath, "mobileNo",sTestCaseid);
		String name= getColumnNumber(SPath, "name",sTestCaseid);
		String monthlyIncome= getColumnNumber(SPath, "monthlyIncome",sTestCaseid);
		String currency= getColumnNumber(SPath, "currency",sTestCaseid);
		String cardType= getColumnNumber(SPath, "cardType",sTestCaseid);
		String StringcallMeBack= getColumnNumber(SPath, "callMeBack",sTestCaseid);
		boolean callMeBack=Boolean.parseBoolean(StringcallMeBack);
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
		String language= getColumnNumber(SPath, "language",sTestCaseid);
		
		//System.out.println(dateOfJoining);
		JSONObject body = new JSONObject();
	
		body.put("emailId", emailId);
		
		JSONObject cardSelection1 = new JSONObject();
		cardSelection1.put("employmentType", employmentType); 
		cardSelection1.put("mobileNo", mobileNo);
		cardSelection1.put("name", name);
		cardSelection1.put("monthlyIncome", monthlyIncome);
		cardSelection1.put("currency", currency);
		cardSelection1.put("cardType", cardType);
		cardSelection1.put("callMeBack", callMeBack);
		body.put("cardSelection", cardSelection1);
		body.put("language", language);
		body.put("viewId", viewId);
		
		
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_09"+"<br>"+"API Description: Update Card Prospects- Card selection "+"<br>"+" list of card should be updated as per salary selection "+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"list of card should be updated as per salary selection Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	public static void API_10(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String prospectId= getColumnNumber(SPath, "prospectId",sTestCaseid);
		String countryCode= getColumnNumber(SPath, "countryCode",sTestCaseid);
		String mobileNo= getColumnNumber(SPath, "mobileNo",sTestCaseid);
		String email= getColumnNumber(SPath, "email",sTestCaseid);
		String action= getColumnNumber(SPath, "action",sTestCaseid);
		String otpType= getColumnNumber(SPath, "otpType",sTestCaseid);
		
		//System.out.println(dateOfJoining);
		JSONObject body = new JSONObject();
	
		body.put("prospectId", prospectId);
		body.put("countryCode", countryCode);
		body.put("mobileNo", mobileNo);
		body.put("email", email);
		body.put("action", action);
		body.put("otpType", otpType);
		
		
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_10"+"<br>"+"API Description: Generate OTP"+"<br>"+" OTP Generate should be successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"OTP Generated  successfully with responce code 201 Created"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.post(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==201)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
		
	public static void API_11(String sTestCaseidval) throws Exception
	{

		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String prospectId= getColumnNumber(SPath, "prospectId",sTestCaseid);
		
		String countryCode= getColumnNumber(SPath, "countryCode",sTestCaseid);
		String mobileNo= getColumnNumber(SPath, "mobileNo",sTestCaseid);
		String email= getColumnNumber(SPath, "email",sTestCaseid);
		String action= getColumnNumber(SPath, "action",sTestCaseid);
		String otpType= getColumnNumber(SPath, "otpType",sTestCaseid);
		
		
		//System.out.println(dateOfJoining);
		JSONObject body = new JSONObject();
	
		body.put("prospectId", prospectId);
		body.put("countryCode", countryCode);
		body.put("mobileNo", mobileNo);
		body.put("email", email);
		body.put("action", action);
		body.put("otpType", otpType);
		
		
	
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_11"+"<br>"+"API Description: Resend OTP"+"<br>"+" Resend OTP Generate should be successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"Resend OTP Generated  successfully with responce code 201 Created"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
	
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.post(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==201)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		 
	}
		
	public static void API()
	{
		 System.setProperty("webdriver.chrome.driver", "C:\\Jars\\Api Jars\\ChromeDriver\\chromedriver_win32 (2)\\chromedriver.exe");
		 WebDriver driver=new ChromeDriver();
	     driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		 driver.manage().window().maximize();
		 driver.get("http://10.15.11.56:9080/SMSWeb/index.jsp");
		 driver.findElement(By.id("j_username_t")).sendKeys("tjuneja");
		 driver.findElement(By.id("j_password_t")).sendKeys("rakbank@123");
		 driver.findElement(By.className("buttonStyle")).click();
		 driver.findElement(By.xpath("//span[text()='OK']")).click();
		 WebElement ele = driver.findElement(By.xpath("//span[text()='Enquiry']"));
		 Actions action = new Actions(driver);
		 action.moveToElement(ele).perform();
		 driver.findElement(By.xpath("//span[text()='SMS Enquiry']")).click();
		 DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy ");
		 Date date = new Date();
		 String date1= dateFormat.format(date);
		 driver.findElement(By.name("mobileNumberSearch")).sendKeys("971504963477");
		 driver.findElement(By.id("fromDate")).sendKeys(date1);	
		 driver.findElement(By.id("toDate")).sendKeys(date1);	
		 driver.findElement(By.name("btnSearch")).click();
		 String SMSBODY = driver.findElement(By.xpath("(//td[@width='243'])[1]")).getText();
		 String OTP=SMSBODY.replaceAll("[^-?0-9]+","");
		 System.out.println(OTP);
		 
		 StringBuilder sb = new StringBuilder();
		 for(int i = 0; i < OTP.length()-2; i++) {
		     sb.append(OTP.charAt(i));
		 }
		 
		 
		 System.out.println(sb.toString());
		 
		 
		 String OTP1=sb.toString();
		 
		 
		 
		 driver.close();
		
	}
	
	public static void API_12(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String OTPMobileNumber= getColumnNumber(SPath, "OTPMobileNumber",sTestCaseid);
	
		 System.setProperty("webdriver.chrome.driver", "C:\\Jars\\Api Jars\\ChromeDriver\\chromedriver_win32\\chromedriver.exe");
		 WebDriver driver=new ChromeDriver();
	     driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		 driver.manage().window().maximize();
		 driver.get("http://10.15.11.56:9080/SMSWeb/index.jsp");
		 driver.findElement(By.id("j_username_t")).sendKeys("sideva");
		 driver.findElement(By.id("j_password_t")).sendKeys("rakbank@123");
		 driver.findElement(By.className("buttonStyle")).click();
		 driver.findElement(By.xpath("//span[text()='OK']")).click();
		 WebElement ele = driver.findElement(By.xpath("//span[text()='Enquiry']"));
		 Actions action1 = new Actions(driver);
		 action1.moveToElement(ele).perform();
		 driver.findElement(By.xpath("//span[text()='SMS Enquiry']")).click();
		 DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy ");
		 Date date = new Date();
		 String date1= dateFormat.format(date);
		 driver.findElement(By.name("mobileNumberSearch")).sendKeys(OTPMobileNumber);
		 driver.findElement(By.id("fromDate")).sendKeys(date1);	
		 driver.findElement(By.id("toDate")).sendKeys(date1);	
		 driver.findElement(By.name("btnSearch")).click();
		 String SMSBODY = driver.findElement(By.xpath("(//td[@width='243'])[1]")).getText();
		 String OTP=SMSBODY.replaceAll("[^-?0-9]+","");
		 System.out.println(OTP);
		 
		 
		 StringBuilder sb = new StringBuilder();
		 for(int i = 0; i < OTP.length()-4; i++) {
		     sb.append(OTP.charAt(i));
		 }
		 
		 
		 System.out.println(sb.toString());
		 
		 
		 String OTP1=sb.toString();
		 
		 driver.findElement(By.xpath("//a[text()='Logout']")).click();
		 
		 driver.close();

		 String mobileNo= getColumnNumber(SPath, "mobileNo",sTestCaseid);
			String prospectId= getColumnNumber(SPath, "prospectId",sTestCaseid);
		
			String countryCode= getColumnNumber(SPath, "countryCode",sTestCaseid);
			
			String email= getColumnNumber(SPath, "email",sTestCaseid);
		
			String action= getColumnNumber(SPath, "action",sTestCaseid);
			String otpType= getColumnNumber(SPath, "otpType",sTestCaseid);
		
			
			JSONObject body = new JSONObject();
		
			body.put("prospectId", prospectId);
			body.put("countryCode", countryCode);
			body.put("mobileNo", mobileNo);
			body.put("email", email);
			body.put("action", action);
			body.put("otpType", otpType);
			body.put("otpToken", OTP1);
			
			
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_12"+"<br>"+"API Description: Verify OTP"+"<br>"+" Verify OTP should be successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"Verify OTP  successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.post(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		
		
		   
		
		
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			
			iCardServicesFail = iCardServicesFail+1;
		}
		
		 
	}
	
	public static void API_13(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String typeOfAddress= getColumnNumber(SPath, "typeOfAddress",sTestCaseid);
		String addressLine1= getColumnNumber(SPath, "addressLine1",sTestCaseid);
		String addressLine2= getColumnNumber(SPath, "addressLine2",sTestCaseid);
		String addressLine3= getColumnNumber(SPath, "addressLine3",sTestCaseid);
		String addressLine4= getColumnNumber(SPath, "addressLine4",sTestCaseid);
		String poBox= getColumnNumber(SPath, "poBox",sTestCaseid);
		String emirateCity= getColumnNumber(SPath, "emirateCity",sTestCaseid);
		String stateCode= getColumnNumber(SPath, "stateCode",sTestCaseid);
		String country= getColumnNumber(SPath, "country",sTestCaseid);
		String mobileNo= getColumnNumber(SPath, "mobileNo",sTestCaseid);
		String preferredAddress= getColumnNumber(SPath, "preferredAddress",sTestCaseid);
		String language= getColumnNumber(SPath, "language",sTestCaseid);
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
		String cityCode= getColumnNumber(SPath, "cityCode",sTestCaseid);
		String countryCode= getColumnNumber(SPath, "countryCode",sTestCaseid);
		
		
		
		
		//System.out.println(dateOfJoining);
		JSONObject body = new JSONObject();
	
		
		body.put("viewId", viewId);
		body.put("language", language);
		
		
		JSONObject addressDetails1 = new JSONObject();
		addressDetails1.put("typeOfAddress", typeOfAddress);
		addressDetails1.put("addressLine1", addressLine1);
		addressDetails1.put("addressLine2", addressLine2);
		addressDetails1.put("addressLine3", addressLine3);
		addressDetails1.put("addressLine4", addressLine4);
		addressDetails1.put("poBox", poBox);
		addressDetails1.put("cityCode", cityCode);
		addressDetails1.put("stateCode", stateCode);
		addressDetails1.put("country", country);
		//addressDetails1.put("countryCode", countryCode);
		addressDetails1.put("mobileNo", mobileNo);
		
		
		List<JSONObject> all=new ArrayList<>();
		all.add(addressDetails1);
		
		JSONObject addressInfo1 = new JSONObject();
		addressInfo1.put("preferredAddress", preferredAddress);
		addressInfo1.put("addressDetails", all);
		body.put("addressInfo", addressInfo1);
		
		
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_13"+"<br>"+"API Description: Update Card Prospects Home Country Address details"+"<br>"+" Home Country Address Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"Home Country Address Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	
	public static void API_14(String sTestCaseidval) throws Exception
	{
		
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String typeOfAddress= getColumnNumber(SPath, "typeOfAddress",sTestCaseid);
		String addressLine1= getColumnNumber(SPath, "addressLine1",sTestCaseid);
		String addressLine2= getColumnNumber(SPath, "addressLine2",sTestCaseid);
		String addressLine3= getColumnNumber(SPath, "addressLine3",sTestCaseid);
		String addressLine4= getColumnNumber(SPath, "addressLine4",sTestCaseid);
		String poBox= getColumnNumber(SPath, "poBox",sTestCaseid);
		String emirateCity= getColumnNumber(SPath, "emirateCity",sTestCaseid);
		String stateCode= getColumnNumber(SPath, "stateCode",sTestCaseid);
		String country= getColumnNumber(SPath, "country",sTestCaseid);
		String mobileNo= getColumnNumber(SPath, "mobileNo",sTestCaseid);
		String preferredAddress= getColumnNumber(SPath, "preferredAddress",sTestCaseid);
		String language= getColumnNumber(SPath, "language",sTestCaseid);
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
		
	
		
		//System.out.println(dateOfJoining);
		JSONObject body = new JSONObject();
	
		
		body.put("viewId", viewId);
		body.put("language", language);
		
		
		JSONObject addressDetails1 = new JSONObject();
		addressDetails1.put("typeOfAddress", typeOfAddress);
		addressDetails1.put("addressLine1", addressLine1);
		addressDetails1.put("addressLine2", addressLine2);
		addressDetails1.put("addressLine3", addressLine3);
		addressDetails1.put("addressLine4", addressLine4);
		addressDetails1.put("poBox", poBox);
		addressDetails1.put("emirateCity", emirateCity);
		addressDetails1.put("stateCode", stateCode);
		addressDetails1.put("country", country);
		
		
		
		List<JSONObject> all=new ArrayList<>();
		all.add(addressDetails1);
		
		JSONObject addressInfo1 = new JSONObject();
		addressInfo1.put("preferredAddress", preferredAddress);
		addressInfo1.put("addressDetails", all);
		body.put("addressInfo", addressInfo1);
	
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_14"+"<br>"+"API Description: Update Card Prospects Residential Address details"+"<br>"+" Residential Address details Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"Residential Address details Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	
	public static void API_15(String sTestCaseidval) throws Exception
	{
		

		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String typeOfAddress= getColumnNumber(SPath, "typeOfAddress",sTestCaseid);
		String addressLine1= getColumnNumber(SPath, "addressLine1",sTestCaseid);
		String addressLine2= getColumnNumber(SPath, "addressLine2",sTestCaseid);
		String addressLine3= getColumnNumber(SPath, "addressLine3",sTestCaseid);
		String addressLine4= getColumnNumber(SPath, "addressLine4",sTestCaseid);
		String poBox= getColumnNumber(SPath, "poBox",sTestCaseid);
		String emirateCity= getColumnNumber(SPath, "emirateCity",sTestCaseid);
		String stateCode= getColumnNumber(SPath, "stateCode",sTestCaseid);
		String country= getColumnNumber(SPath, "country",sTestCaseid);
		String mobileNo= getColumnNumber(SPath, "mobileNo",sTestCaseid);
		String preferredAddress= getColumnNumber(SPath, "preferredAddress",sTestCaseid);
		String language= getColumnNumber(SPath, "language",sTestCaseid);
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
	
		
		//System.out.println(dateOfJoining);
		JSONObject body = new JSONObject();
	
		
		body.put("viewId", viewId);
		body.put("language", language);
		
		
		JSONObject addressDetails1 = new JSONObject();
		addressDetails1.put("typeOfAddress", typeOfAddress);
		addressDetails1.put("addressLine1", addressLine1);
		addressDetails1.put("addressLine2", addressLine2);
		addressDetails1.put("addressLine3", addressLine3);
		addressDetails1.put("addressLine4", addressLine4);
		addressDetails1.put("poBox", poBox);
		addressDetails1.put("emirateCity", emirateCity);
		addressDetails1.put("stateCode", stateCode);
		addressDetails1.put("country", country);
		
		
		
		List<JSONObject> all=new ArrayList<>();
		all.add(addressDetails1);
		
		JSONObject addressInfo1 = new JSONObject();
		addressInfo1.put("preferredAddress", preferredAddress);
		addressInfo1.put("addressDetails", all);
		body.put("addressInfo", addressInfo1);
		
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_15"+"<br>"+"API Description: Update Card Prospects office Address details"+"<br>"+" office Address details Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"office Address details Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	
	public static void API_16(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		
		String promoCommMode= getColumnNumber(SPath, "promoCommMode3",sTestCaseid);
		String StringpromoOffersCommFlg= getColumnNumber(SPath, "promoOffersCommFlg",sTestCaseid);
		boolean  promoOffersCommFlg = Boolean.getBoolean(StringpromoOffersCommFlg);
		String language= getColumnNumber(SPath, "language",sTestCaseid);
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
	
	
	
		
		//System.out.println(dateOfJoining);
		JSONObject body = new JSONObject();
	
		
		body.put("viewId", viewId);
		body.put("language", language);
		
		
		JSONObject promoCommMode1 = new JSONObject();
		promoCommMode1.put("promoCommMode", promoCommMode);
	
		List<JSONObject> all=new ArrayList<>();
		all.add(promoCommMode1);
		
		JSONObject kfsConsentAndDeclarations1 = new JSONObject();
		kfsConsentAndDeclarations1.put("promoOffersCommFlg", promoOffersCommFlg);
		kfsConsentAndDeclarations1.put("promoCommMode", all);
		body.put("kfsConsentAndDeclarations", kfsConsentAndDeclarations1);
	
	
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_16"+"<br>"+"API Description: Update Card Prospects MARKETING Consent"+"<br>"+" MARKETING Consent details Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"MARKETING Consent details Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	
	public static void API_17(String sTestCaseidval) throws Exception
	{
		
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String StringtermsAndConditions= getColumnNumber(SPath, "termsAndConditions",sTestCaseid);
		boolean termsAndConditions= Boolean.parseBoolean(StringtermsAndConditions);
		String language= getColumnNumber(SPath, "language",sTestCaseid);
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
		
	
	
		JSONObject body = new JSONObject();

		JSONObject kfsConsentAndDeclarations1 = new JSONObject();
		kfsConsentAndDeclarations1.put("termsAndConditions", termsAndConditions); 
		
		body.put("kfsConsentAndDeclarations", kfsConsentAndDeclarations1);
		body.put("language", language);
		body.put("viewId", viewId);
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_17"+"<br>"+"API Description: update Card Prospects T and C Consent"+"<br>"+" T and C Consent details Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"T and C Consent details Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	
	public static void API_18(String sTestCaseidval) throws Exception
	{
		
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String StringmandatoryConsentFlag= getColumnNumber(SPath, "mandatoryConsentFlag",sTestCaseid);
		boolean mandatoryConsentFlag= Boolean.parseBoolean(StringmandatoryConsentFlag);
		String language= getColumnNumber(SPath, "language",sTestCaseid);
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
	
		JSONObject body = new JSONObject();

		JSONObject kfsConsentAndDeclarations1 = new JSONObject();
		kfsConsentAndDeclarations1.put("mandatoryConsentFlag", mandatoryConsentFlag); 
		
		body.put("kfsConsentAndDeclarations", kfsConsentAndDeclarations1);
		body.put("language", language);
		body.put("viewId", viewId);
		
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_18"+"<br>"+"API Description: update Card Prospects AECBConsent"+"<br>"+" AECB Consent details Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"AECB Consent details Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	public static void API_19(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String StringstatementFlag= getColumnNumber(SPath, "statementFlag",sTestCaseid);
		boolean statementFlag= Boolean.parseBoolean(StringstatementFlag);
		
		String language = getColumnNumber(SPath, "language",sTestCaseid);
		String ibanNo = getColumnNumber(SPath, "ibanNo",sTestCaseid);
		String viewId = getColumnNumber(SPath, "viewId",sTestCaseid);
	
		JSONObject body = new JSONObject();

		JSONObject kfsConsentAndDeclarations1 = new JSONObject();
		kfsConsentAndDeclarations1.put("statementFlag", statementFlag); 
		kfsConsentAndDeclarations1.put("ibanNo", ibanNo); 
		
		body.put("kfsConsentAndDeclarations", kfsConsentAndDeclarations1);
		body.put("language", language);
		body.put("viewId", viewId);
		
		
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_19"+"<br>"+"API Description: Update Card Prospects FTSConsent"+"<br>"+" FTS Consent details Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"FTS Consent details Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	
	
	public static void API_20(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);

		Framework.test = Framework.extent.createTest("API ID: API_20"+"<br>"+"API Description: Get the data for list accout services"+"<br>"+"Account services data list should be fetched successfully"+"<br>");
		Framework.test.assignCategory("Account Services");
		Framework.WriteExtentReport = Framework.test.createNode("Get request"+"<br><br>Expected result : "+"Get response hould be fectched successfully with responce code 200"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		System.out.println(sRequest);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","38f293a11f74c58cdbc5af51d465eb37ad2642b8ad7495769ae9ef371d22848f")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.when()
				.get(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		//System.out.println("-------------"+response.getStatusCode());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iAccountServicesPass = iAccountServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iAccountServicesFail = iAccountServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iAccountServicesFail = iAccountServicesFail+1;
		   }
		 
	}
		
	public static void API_21(String sTestCaseidval) throws Exception
	{
		
		
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String StringpersonOfDetermination = getColumnNumber(SPath, "personOfDetermination",sTestCaseid);
		boolean personOfDetermination= Boolean.parseBoolean(StringpersonOfDetermination);
		
		String fullName = getColumnNumber(SPath, "fullName",sTestCaseid);
		String emailID = getColumnNumber(SPath, "emailID",sTestCaseid);
		String countryCode = getColumnNumber(SPath, "countryCode",sTestCaseid);
		String mobileNo = getColumnNumber(SPath, "mobileNo",sTestCaseid);
		String prodCategory = getColumnNumber(SPath, "prodCategory",sTestCaseid);
		String typeOfDisability = getColumnNumber(SPath, "typeOfDisability",sTestCaseid);
		String disabilityRemarks = getColumnNumber(SPath, "disabilityRemarks",sTestCaseid);
		String language = getColumnNumber(SPath, "language",sTestCaseid);
		String agentCode = getColumnNumber(SPath, "agentCode",sTestCaseid);
		String viewId = getColumnNumber(SPath, "viewId",sTestCaseid);
		String productSubType = getColumnNumber(SPath, "productSubType",sTestCaseid);
	
		JSONObject body = new JSONObject();
		body.put("fullName", fullName);
		body.put("emailId", emailID);
		body.put("countryCode", countryCode);
		body.put("mobileNo", mobileNo);
		body.put("productSubType", productSubType);
		body.put("prodCategory", prodCategory);
		body.put("personOfDetermination", personOfDetermination);
		body.put("typeOfDisability",  typeOfDisability);
		body.put("disabilityRemarks", disabilityRemarks);
		body.put("language", language);
		body.put("agentCode", agentCode);
		body.put("viewId", viewId);
		
		
		Framework.test = Framework.extent.createTest("API ID: API_21"+"<br>"+"API Description: Create Prospect"+"<br>"+"User should be create successfully"+"<br>");
		Framework.test.assignCategory("Account Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"User Created successfully with responce code 201"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","38f293a11f74c58cdbc5af51d465eb37ad2642b8ad7495769ae9ef371d22848f")
				.header("Authorization",sTokenkey)
				.body(body.toJSONString())
				.when()
				.post(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		//System.out.println("-------------"+response.getStatusCode());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==201)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iAccountServicesPass = iAccountServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iAccountServicesFail = iAccountServicesFail+1;
		}
		 
	}
		
	public static void API_22(String sTestCaseidval) throws Exception
	{
		
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String fullName = getColumnNumber(SPath, "fullName",sTestCaseid);
		
		String emailID = getColumnNumber(SPath, "emailID",sTestCaseid);
		String countryCode = getColumnNumber(SPath, "countryCode",sTestCaseid);
		String mobileNo = getColumnNumber(SPath, "mobileNo",sTestCaseid);
		String productSubType = getColumnNumber(SPath, "productSubType",sTestCaseid);
		
		JSONObject body = new JSONObject();
		body.put("fullName", fullName);
		body.put("emailId", emailID);
		body.put("countryCode", countryCode);
		body.put("mobileNo", mobileNo);
		body.put("productSubType", productSubType);
	
		
		Framework.test = Framework.extent.createTest("API ID: API_22"+"<br>"+"API Description: Search Prospect"+"<br>"+" User Detail should be fetched successfully"+"<br>");
		Framework.test.assignCategory("Account Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"User Details fetched successfully with responce code 200"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","38f293a11f74c58cdbc5af51d465eb37ad2642b8ad7495769ae9ef371d22848f")
				.header("Authorization",sTokenkey)
				.body(body.toJSONString())
				.when()
				.post(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		//System.out.println("-------------"+response.getStatusCode());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iAccountServicesPass = iAccountServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iAccountServicesFail = iAccountServicesFail+1;
		}
		 
	}
		
	public static void API_23(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String productSubType = getColumnNumber(SPath, "productSubType",sTestCaseid);
		String prodCategory = getColumnNumber(SPath, "prodCategory",sTestCaseid);
		String purposeOfAccount = getColumnNumber(SPath, "purposeOfAccount",sTestCaseid);
		String purposeOfAccountOthers = getColumnNumber(SPath, "purposeOfAccountOthers",sTestCaseid);
		String chequeBookRequired = getColumnNumber(SPath, "chequeBookRequired",sTestCaseid);
		String debitCardRequired = getColumnNumber(SPath, "debitCardRequired",sTestCaseid);
		String virtualCardRequired = getColumnNumber(SPath, "virtualCardRequired",sTestCaseid);
		String viewId = getColumnNumber(SPath, "viewId",sTestCaseid);
		
		JSONObject body = new JSONObject();
	
		JSONObject productInfo1 = new JSONObject();
		productInfo1.put("productSubType", productSubType); 
		productInfo1.put("prodCategory", prodCategory);
		productInfo1.put("purposeOfAccount", purposeOfAccount);
		productInfo1.put("purposeOfAccountOthers", purposeOfAccountOthers);
		productInfo1.put("chequeBookRequired", chequeBookRequired);
		productInfo1.put("debitCardRequired", debitCardRequired);
		productInfo1.put("virtualCardRequired", virtualCardRequired);
		body.put("productInfo", productInfo1);
		body.put("viewId", viewId);
	
		Framework.test = Framework.extent.createTest("API ID: API_23"+"<br>"+"API Description: Update Prospect PATCH-Product Info"+"<br>"+" Product INFO  should be update successfully"+"<br>");
		Framework.test.assignCategory("Account Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"Product INFO Update successfully with responce code 204 Not Content"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","38f293a11f74c58cdbc5af51d465eb37ad2642b8ad7495769ae9ef371d22848f")
				.header("Authorization",sTokenkey)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		//System.out.println("-------------"+response.getStatusCode());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==204)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iAccountServicesPass = iAccountServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iAccountServicesFail = iAccountServicesFail+1;
		}
		 
	}
	
	public static void API_24(String sTestCaseidval) throws Exception
	{
		
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String productSubType = getColumnNumber(SPath, "productSubType",sTestCaseid);
		String prodCategory = getColumnNumber(SPath, "prodCategory",sTestCaseid);
		String emailId = getColumnNumber(SPath, "emailId",sTestCaseid);
		String purposeOfAccount = getColumnNumber(SPath, "purposeOfAccount",sTestCaseid);
		String purposeOfAccountOthers = getColumnNumber(SPath, "purposeOfAccountOthers",sTestCaseid);
		String chequeBookRequired = getColumnNumber(SPath, "chequeBookRequired",sTestCaseid);
		String debitCardRequired = getColumnNumber(SPath, "debitCardRequired",sTestCaseid);
		String virtualCardRequired = getColumnNumber(SPath, "virtualCardRequired",sTestCaseid);
		String viewId = getColumnNumber(SPath, "viewId",sTestCaseid);
		String StringconsentFlag = getColumnNumber(SPath, "consentFlag",sTestCaseid);
		boolean consentFlag = Boolean.parseBoolean(StringconsentFlag);
		String referenceNumber = getColumnNumber(SPath, "referenceNumber",sTestCaseid);

		JSONObject body = new JSONObject();
	
		JSONObject consentInfo1 = new JSONObject();
		consentInfo1.put("consentFlag", consentFlag);
		consentInfo1.put("referenceNumber", referenceNumber);
		
		
		body.put("consentInfo", consentInfo1);
		body.put("emailId", emailId);
		JSONObject productInfo1 = new JSONObject();
		productInfo1.put("productSubType", productSubType); 
		productInfo1.put("prodCategory", prodCategory);
		productInfo1.put("purposeOfAccount", purposeOfAccount);
		productInfo1.put("purposeOfAccountOthers", purposeOfAccountOthers);
		productInfo1.put("chequeBookRequired", chequeBookRequired);
		productInfo1.put("debitCardRequired", debitCardRequired);
		productInfo1.put("virtualCardRequired", virtualCardRequired);
		body.put("productInfo", productInfo1);
		body.put("viewId", viewId);
		
		Framework.test = Framework.extent.createTest("API ID: API_24"+"<br>"+"API Description: Update Retail Prospects-KFS Consent"+"<br>"+" KFS Consent should be update successfully"+"<br>");
		Framework.test.assignCategory("Account Services");
		Framework.WriteExtentReport = Framework.test.createNode("patch request"+"<br><br>Expected result : "+"KFS Consent INFO Update successfully with responce code 204 Not Content"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","38f293a11f74c58cdbc5af51d465eb37ad2642b8ad7495769ae9ef371d22848f")
				.header("Authorization",sTokenkey)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		//System.out.println("-------------"+response.getStatusCode());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==204)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iAccountServicesPass = iAccountServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iAccountServicesFail = iAccountServicesFail+1;
		}
		 
	}
	
	public static void API_25(String sTestCaseidval) throws Exception
	{
		
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String emailId = getColumnNumber(SPath, "emailId",sTestCaseid);
		String viewId = getColumnNumber(SPath, "viewId",sTestCaseid);
		String language = getColumnNumber(SPath, "language",sTestCaseid);
		String salutation = getColumnNumber(SPath, "salutation",sTestCaseid);
		String firstName = getColumnNumber(SPath, "firstName",sTestCaseid);
		String lastName = getColumnNumber(SPath, "lastName",sTestCaseid);
		String fullName = getColumnNumber(SPath, "fullName",sTestCaseid);
		String emiratesId = getColumnNumber(SPath, "emiratesId",sTestCaseid);
		String emiratesIdExpiryDate = getColumnNumber(SPath, "emiratesIdExpiryDate",sTestCaseid);
		String maritalStatus = getColumnNumber(SPath, "maritalStatus",sTestCaseid);
		String gender = getColumnNumber(SPath, "gender",sTestCaseid);
		String dateOfBirth = getColumnNumber(SPath, "dateOfBirth",sTestCaseid);
		String motherMaidenName = getColumnNumber(SPath, "motherMaidenName",sTestCaseid);
		String countryOfBirth = getColumnNumber(SPath, "countryOfBirth",sTestCaseid);
		System.out.println(countryOfBirth);
	
		String passportExpiryDate = getColumnNumber(SPath, "passportExpiryDate",sTestCaseid);
		String residenceCountry = getColumnNumber(SPath, "residenceCountry",sTestCaseid);
		String StringdualNationality = getColumnNumber(SPath, "dualNationality",sTestCaseid);
		boolean dualNationality= Boolean.parseBoolean(StringdualNationality);
		String nationality3 = getColumnNumber(SPath, "nationality",sTestCaseid);
		String StringisPep = getColumnNumber(SPath, "isPep",sTestCaseid);
		boolean isPep= Boolean.parseBoolean(StringisPep);
		String pepCategory = getColumnNumber(SPath, "pepCategory",sTestCaseid);
		String previousDesignation = getColumnNumber(SPath, "previousDesignation",sTestCaseid);
		String relationsWithPEP = getColumnNumber(SPath, "relationsWithPEP",sTestCaseid);
		String pepName = getColumnNumber(SPath, "pepName",sTestCaseid);
		String pepCity = getColumnNumber(SPath, "pepCity",sTestCaseid);
		String pepCountry = getColumnNumber(SPath, "pepCountry",sTestCaseid);
				
		JSONObject body = new JSONObject();
		//body.put("emailId", emailId);
		body.put("viewId", viewId);
		//body.put("language", language);
		
		JSONObject personalDetails1 = new JSONObject();
		//kycInfo1.put("salutation", salutation);
		//kycInfo1.put("firstName", firstName);
		//kycInfo1.put("lastName", lastName);
		//kycInfo1.put("fullName", fullName);
		//kycInfo1.put("emiratesId", emiratesId);
		//kycInfo1.put("emiratesIdExpiryDate", emiratesIdExpiryDate);
		//kycInfo1.put("maritalStatus", maritalStatus);
		//kycInfo1.put("gender", gender);
		
		//kycInfo1.put("dateOfBirth", dateOfBirth);
		personalDetails1.put("motherMaidenName", motherMaidenName);
		personalDetails1.put("countryOfBirth", countryOfBirth);
		//kycInfo1.put("passportExpiryDate", passportExpiryDate);
		//kycInfo1.put("residenceCountry", residenceCountry);
		
		JSONObject nationality1 = new JSONObject();
		nationality1.put("dualNationality", dualNationality);
		
		List<String> nationality2 = Arrays.asList(nationality3);
		
		nationality1.put("nationality", nationality2);
		personalDetails1.put("nationality", nationality1);
		
		body.put("personalDetails", personalDetails1);
		JSONObject pepInfo1 = new JSONObject();
		pepInfo1.put("isPep", isPep);
		pepInfo1.put("pepCategory", pepCategory);
		pepInfo1.put("previousDesignation", previousDesignation);
		pepInfo1.put("relationsWithPEP", relationsWithPEP);
		pepInfo1.put("pepName", pepName);
		pepInfo1.put("pepCity", pepCity);
		pepInfo1.put("pepCountry", pepCountry);
		body.put("pepInfo", pepInfo1);
		
		System.out.println(body);
		
		Framework.test = Framework.extent.createTest("API ID: API_25"+"<br>"+"API Description: Update Prospect PATCH-KycInfo"+"<br>"+" Kyc Info should be update successfully"+"<br>");
		Framework.test.assignCategory("Account Services");
		Framework.WriteExtentReport = Framework.test.createNode("patch request"+"<br><br>Expected result : "+"Kyc Info Update successfully with responce code 204 Not Content"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","38f293a11f74c58cdbc5af51d465eb37ad2642b8ad7495769ae9ef371d22848f")
				.header("Authorization",sTokenkey)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		//System.out.println("-------------"+response.getStatusCode());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==204)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iAccountServicesPass = iAccountServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iAccountServicesFail = iAccountServicesFail+1;
		}
		 
	}
			
	public static void API_26(String sTestCaseidval) throws Exception
	{
    	String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String StringisPep = getColumnNumber(SPath, "isPep",sTestCaseid);
		boolean isPep= Boolean.parseBoolean(StringisPep);
		
		String pepCategory = getColumnNumber(SPath, "pepCategory",sTestCaseid);
		String previousDesignation = getColumnNumber(SPath, "previousDesignation",sTestCaseid);
		String pepCountry = getColumnNumber(SPath, "pepCountry",sTestCaseid);
		String viewId = getColumnNumber(SPath, "viewId",sTestCaseid);
		
		JSONObject body = new JSONObject();
		
		body.put("viewId", viewId);
		
		
		JSONObject pepInfo1 = new JSONObject();
		pepInfo1.put("isPep", isPep);
		pepInfo1.put("pepCategory", pepCategory);
		pepInfo1.put("previousDesignation", previousDesignation);
		//pepInfo1.put("relationsWithPEP", relationsWithPEP);
		//pepInfo1.put("pepName", pepName);
		//pepInfo1.put("pepCity", pepCity);
		pepInfo1.put("pepCountry", pepCountry);
		body.put("pepInfo", pepInfo1);
		
		Framework.test = Framework.extent.createTest("API ID: API_26"+"<br>"+"API Description: Update Prospect PATCH-Pep-1 (PEPAssociationView)"+"<br>"+" PEP Info should be update successfully"+"<br>");
		Framework.test.assignCategory("Account Services");
		Framework.WriteExtentReport = Framework.test.createNode("patch request"+"<br><br>Expected result : "+"PEP Info Update successfully with responce code 204 Not Content"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
	
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","38f293a11f74c58cdbc5af51d465eb37ad2642b8ad7495769ae9ef371d22848f")
				.header("Authorization",sTokenkey)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		//System.out.println("-------------"+response.getStatusCode());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==204)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iAccountServicesPass = iAccountServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iAccountServicesFail = iAccountServicesFail+1;
		}
		 
	}
	
	
    public static void API_27(String sTestCaseidval) throws Exception
	{
	  
    	String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String StringisPep = getColumnNumber(SPath, "isPep",sTestCaseid);
		boolean isPep= Boolean.parseBoolean(StringisPep);
		String pepCategory = getColumnNumber(SPath, "pepCategory",sTestCaseid);
		String previousDesignation = getColumnNumber(SPath, "previousDesignation",sTestCaseid);
		//String relationsWithPEP = getColumnNumber(SPath, "relationsWithPEP",sTestCaseid);
		String pepName = getColumnNumber(SPath, "pepName",sTestCaseid);
		String pepCity = getColumnNumber(SPath, "pepCity",sTestCaseid);
		String pepCountry = getColumnNumber(SPath, "pepCountry",sTestCaseid);
		String viewId = getColumnNumber(SPath, "viewId",sTestCaseid);
		

		JSONObject body = new JSONObject();
		
		body.put("viewId", viewId);
		
		
		JSONObject pepInfo1 = new JSONObject();
		pepInfo1.put("isPep", isPep);
		pepInfo1.put("pepCategory", pepCategory);
		pepInfo1.put("previousDesignation", previousDesignation);
		//pepInfo1.put("relationsWithPEP", relationsWithPEP);
		pepInfo1.put("pepCity", pepCity);
		pepInfo1.put("pepCountry", pepCountry);
		body.put("pepInfo", pepInfo1);
	
		Framework.test = Framework.extent.createTest("API ID: API_27"+"<br>"+"API Description: Update Prospect PATCH-Pep-2"+"<br>"+" PEP Details View should be update successfully"+"<br>");
		Framework.test.assignCategory("Account Services");
		Framework.WriteExtentReport = Framework.test.createNode("patch request"+"<br><br>Expected result : "+"PEP Details View Update successfully with responce code 204 Not Content"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","38f293a11f74c58cdbc5af51d465eb37ad2642b8ad7495769ae9ef371d22848f")
				.header("Authorization",sTokenkey)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		//System.out.println("-------------"+response.getStatusCode());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==204)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iAccountServicesPass = iAccountServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iAccountServicesFail = iAccountServicesFail+1;
		}
		 
	}
	
	public static void API_28(String sTestCaseidval ) throws Exception
	{
		
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String employmentType = getColumnNumber(SPath, "employmentType",sTestCaseid);
		String designation = getColumnNumber(SPath, "designation",sTestCaseid);
		String employerName = getColumnNumber(SPath, "employerName",sTestCaseid);
		String employerNameOther = getColumnNumber(SPath, "employerNameOther",sTestCaseid);
		String monthlyIncome = getColumnNumber(SPath, "monthlyIncome",sTestCaseid);
		String monthlyExpectedTurnoverPercentage = getColumnNumber(SPath, "monthlyExpectedTurnoverPercentage",sTestCaseid);	
		String monthlyExpectedTurnoverCash = getColumnNumber(SPath, "monthlyExpectedTurnoverCash",sTestCaseid);
		String monthlyExpectedTurnoverNonCash = getColumnNumber(SPath, "monthlyExpectedTurnoverNonCash",sTestCaseid);
		String viewId = getColumnNumber(SPath, "viewId",sTestCaseid);
		String subCategory = getColumnNumber(SPath, "subCategory",sTestCaseid);
		String industry = getColumnNumber(SPath, "industry",sTestCaseid);
		String employerCode = getColumnNumber(SPath, "employerCode",sTestCaseid);
		
	   
		JSONObject body = new JSONObject();
		
		body.put("viewId", viewId);
		
		
		JSONObject employmentDetails1 = new JSONObject();
		employmentDetails1.put("employmentType", employmentType);
		
		
		JSONObject businessActivity1 = new JSONObject();
		businessActivity1.put("industry", industry);
		businessActivity1.put("subCategory", subCategory);
		
		JSONObject salariedInfo1 = new JSONObject();
		salariedInfo1.put("designation", designation);
		salariedInfo1.put("employerName", employerName);
		salariedInfo1.put("employerNameOther", employerNameOther);
		salariedInfo1.put("monthlyIncome", monthlyIncome);
		salariedInfo1.put("monthlyExpectedTurnoverPercentage", monthlyExpectedTurnoverPercentage);
		salariedInfo1.put("monthlyExpectedTurnoverCash", monthlyExpectedTurnoverCash);
		salariedInfo1.put("monthlyExpectedTurnoverNonCash", monthlyExpectedTurnoverNonCash);
		salariedInfo1.put("businessActivity", businessActivity1);
		salariedInfo1.put("employerCode", employerCode);
		
		employmentDetails1.put("salariedInfo", salariedInfo1);
		body.put("employmentDetails", employmentDetails1);
		
		System.out.print(body);
		
		Framework.test = Framework.extent.createTest("API ID: API_28"+"<br>"+"API Description: Update Prospect PATCH-Employment  Salaried"+"<br>"+" Salaried Employment Details View should be update successfully"+"<br>");
		Framework.test.assignCategory("Account Services");
		Framework.WriteExtentReport = Framework.test.createNode("patch request"+"<br><br>Expected result : "+"Salaried Employment Details View Updated successfully with responce code 200"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","38f293a11f74c58cdbc5af51d465eb37ad2642b8ad7495769ae9ef371d22848f")
				.header("Authorization",sTokenkey)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		//System.out.println("-------------"+response.getStatusCode());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iAccountServicesPass = iAccountServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iAccountServicesFail = iAccountServicesFail+1;
		}
		 
	}
	
	
	public static void API_29(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String employmentType = getColumnNumber(SPath, "employmentType",sTestCaseid);
		String viewId = getColumnNumber(SPath, "viewId",sTestCaseid);
		String employerName = getColumnNumber(SPath, "employerName",sTestCaseid);
		String employerNameOther = getColumnNumber(SPath, "employerNameOther",sTestCaseid);
		String designation = getColumnNumber(SPath, "designation",sTestCaseid);
		String industry = getColumnNumber(SPath, "industry",sTestCaseid);
		String businessConductedWithCountryList = getColumnNumber(SPath, "businessConductedWithCountryList",sTestCaseid);
		String cntryOfIncorporation = getColumnNumber(SPath, "cntryOfIncorporation",sTestCaseid);
		String numberOfCompanies = getColumnNumber(SPath, "numberOfCompanies",sTestCaseid);
		String monthlyIncome = getColumnNumber(SPath, "monthlyIncome",sTestCaseid);
		String monthlyExpectedTurnoverPercentage = getColumnNumber(SPath, "monthlyExpectedTurnoverPercentage",sTestCaseid);
		String monthlyExpectedTurnoverCash = getColumnNumber(SPath, "monthlyExpectedTurnoverCash",sTestCaseid);
		String monthlyExpectedTurnoverNonCash = getColumnNumber(SPath, "monthlyExpectedTurnoverNonCash",sTestCaseid);
		String subCategory = getColumnNumber(SPath, "subCategory",sTestCaseid);
		String yearOfIncorporation = getColumnNumber(SPath, "yearOfIncorporation",sTestCaseid);
		String shareHoldingPercentage = getColumnNumber(SPath, "shareHoldingPercentage",sTestCaseid);
		String annualTurnover = getColumnNumber(SPath, "annualTurnover",sTestCaseid);
		String annualProfit = getColumnNumber(SPath, "annualProfit",sTestCaseid);
	
		JSONObject body = new JSONObject();
		
		body.put("viewId", viewId);
	    
	    JSONObject employmentDetails1 = new JSONObject();
	    
	    employmentDetails1.put("employmentType", employmentType);
	    
		
		JSONObject selfEmploymentInfo1 = new JSONObject();
		selfEmploymentInfo1.put("numberOfCompanies", numberOfCompanies);
		selfEmploymentInfo1.put("monthlyIncome", monthlyIncome);
		selfEmploymentInfo1.put("monthlyExpectedTurnoverPercentage", monthlyExpectedTurnoverPercentage);
		selfEmploymentInfo1.put("monthlyExpectedTurnoverCash", monthlyExpectedTurnoverCash);
		selfEmploymentInfo1.put("monthlyExpectedTurnoverNonCash", monthlyExpectedTurnoverNonCash);
		
		JSONObject selfEmployementDetails1 = new JSONObject();
		selfEmployementDetails1.put("employerName", employerName);
		selfEmployementDetails1.put("employerNameOther", employerNameOther);
		selfEmployementDetails1.put("designation", designation);
		
		JSONObject businessActivity1 = new JSONObject();
		businessActivity1.put("industry", industry);
		businessActivity1.put("subCategory", subCategory);
		
		selfEmployementDetails1.put("businessActivity", businessActivity1);
		
		List<String> businessConductedWithCountryList1 = Arrays.asList(businessConductedWithCountryList);
		
		
		selfEmployementDetails1.put("businessConductedWithCountryList", businessConductedWithCountryList1);
		selfEmployementDetails1.put("cntryOfIncorporation", cntryOfIncorporation);
		selfEmployementDetails1.put("yearOfIncorporation", yearOfIncorporation);
		selfEmployementDetails1.put("shareHoldingPercentage", shareHoldingPercentage);
		selfEmployementDetails1.put("annualTurnover", annualTurnover);
		selfEmployementDetails1.put("annualProfit", annualProfit);
		
		
		List<JSONObject> all=new ArrayList<>();
		all.add(selfEmployementDetails1);
		selfEmploymentInfo1.put("selfEmployementDetails", all);
		
		employmentDetails1.put("employmentType", "Self employed");
		    
		employmentDetails1.put("selfEmploymentInfo", selfEmploymentInfo1);
	
		body.put("employmentDetails", employmentDetails1);
		
		System.out.println(body);
		
		Framework.test = Framework.extent.createTest("API ID: API_29"+"<br>"+"API Description: Update Prospect PATCH-Employment Self Employed"+"<br>"+" Self Employment Details View should be update successfully"+"<br>");
		Framework.test.assignCategory("Account Services");
		Framework.WriteExtentReport = Framework.test.createNode("patch request"+"<br><br>Expected result : "+"Self Employment Details View updated successfully with responce code 200"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","38f293a11f74c58cdbc5af51d465eb37ad2642b8ad7495769ae9ef371d22848f")
				.header("Authorization",sTokenkey)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		//System.out.println("-------------"+response.getStatusCode());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		System.out.println("-------------"+response.getTime()+" Seconds");
		
		//Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iAccountServicesPass = iAccountServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iAccountServicesFail = iAccountServicesFail+1;
		}
		 
	}
	
	
	public static void API_30(String sTestCaseidval) throws Exception
	{
		

		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";

		String preferredAddress = getColumnNumber(SPath, "preferredAddress",sTestCaseid);
		String deliveryMode = getColumnNumber(SPath, "deliveryMode",sTestCaseid);
		String typeOfAddress = getColumnNumber(SPath, "typeOfAddress",sTestCaseid);
		String addressLine1 = getColumnNumber(SPath, "addressLine1",sTestCaseid);
		String addressLine2 = getColumnNumber(SPath, "addressLine2",sTestCaseid);
		String addressLine3 = getColumnNumber(SPath, "addressLine3",sTestCaseid);
		String addressLine4 = getColumnNumber(SPath, "addressLine4",sTestCaseid);
		String poBox = getColumnNumber(SPath, "poBox",sTestCaseid);
		String emirateCity = getColumnNumber(SPath, "emirateCity",sTestCaseid);
		String country = getColumnNumber(SPath, "country",sTestCaseid);
		String employmentType = getColumnNumber(SPath, "employmentType",sTestCaseid);
		String viewId = getColumnNumber(SPath, "viewId",sTestCaseid);
		
	   
		JSONObject body = new JSONObject();
		
		body.put("viewId", viewId);
		
		
   
		JSONObject addressInfo1 = new JSONObject();
		addressInfo1.put("preferredAddress", preferredAddress);
		addressInfo1.put("deliveryMode", deliveryMode);
		
		JSONObject addressDetails1 = new JSONObject();
		addressDetails1.put("typeOfAddress", typeOfAddress);
		addressDetails1.put("addressLine1", addressLine1);
		addressDetails1.put("addressLine2", addressLine2);
		addressDetails1.put("addressLine3", addressLine3);
		addressDetails1.put("addressLine4", addressLine4);
		addressDetails1.put("poBox", poBox);
		addressDetails1.put("emirateCity", emirateCity);
		addressDetails1.put("country", country);
		
		List<JSONObject> all=new ArrayList<>();
		all.add(addressDetails1);
		
		addressInfo1.put("addressDetails", all);
		
		body.put("addressInfo", addressInfo1);
		
		Framework.test = Framework.extent.createTest("API ID: API_30"+"<br>"+"API Description: Update Prospect - Address"+"<br>"+"Address should be update successfully"+"<br>");
		Framework.test.assignCategory("Account Services");
		Framework.WriteExtentReport = Framework.test.createNode("patch request"+"<br><br>Expected result : "+"Address updated successfully with responce code 204 Not Content"+"<br>");
		 String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
			String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
	
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","38f293a11f74c58cdbc5af51d465eb37ad2642b8ad7495769ae9ef371d22848f")
				.header("Authorization",sTokenkey)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		//System.out.println("-------------"+response.getStatusCode());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==204)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iAccountServicesPass = iAccountServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iAccountServicesFail = iAccountServicesFail+1;
		}
		 
	}
	
	
	public static void API_31(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String preferredAddress = getColumnNumber(SPath, "preferredAddress",sTestCaseid);
		String StringusRelation = getColumnNumber(SPath, "usRelation",sTestCaseid);
		boolean usRelation = Boolean.parseBoolean(StringusRelation);
        String StringtaxPayableInOtherCntry = getColumnNumber(SPath, "taxPayableInOtherCntry",sTestCaseid);
		boolean taxPayableInOtherCntry = Boolean.parseBoolean(StringtaxPayableInOtherCntry);
		
		//String ApiName = getColumnNumber(SPath, "ApiName",sTestCaseid);
		
		String typeOfUAEResidency = getColumnNumber(SPath, "typeOfUAEResidency",sTestCaseid);
		String taxCntry = getColumnNumber(SPath, "taxCntry",sTestCaseid);
		String taxCntry1 = getColumnNumber(SPath, "taxCntry1",sTestCaseid);
		String tinNum = getColumnNumber(SPath, "tinNum",sTestCaseid);
		String noTinReason = getColumnNumber(SPath, "noTinReason",sTestCaseid);
		String unableToGetTinRsn = getColumnNumber(SPath, "unableToGetTinRsn",sTestCaseid);
		String tinNum1 = getColumnNumber(SPath, "tinNum1",sTestCaseid);
		String noTinReason1 = getColumnNumber(SPath, "noTinReason1",sTestCaseid);
		String unableToGetTinRsn1 = getColumnNumber(SPath, "unableToGetTinRsn1",sTestCaseid);
		String viewId = getColumnNumber(SPath, "viewId",sTestCaseid);
		
		
	   
		JSONObject body = new JSONObject();
		
		body.put("viewId", viewId);
		
		
   
		JSONObject fatcaAndCRSInfo1 = new JSONObject();
		fatcaAndCRSInfo1.put("usRelation", usRelation);
		fatcaAndCRSInfo1.put("taxPayableInOtherCntry", taxPayableInOtherCntry);
		fatcaAndCRSInfo1.put("typeOfUAEResidency", typeOfUAEResidency);
		
		JSONObject taxCntries1 = new JSONObject();
		taxCntries1.put("taxCntry", taxCntry);
		
		JSONObject taxCntries2 = new JSONObject();
		taxCntries2.put("taxCntry", taxCntry1);
		
		
		List<JSONObject> all=new ArrayList<>();
		all.add(taxCntries1);
		all.add(taxCntries2);
		
		
	
		
		
		JSONObject tinDetails1 = new JSONObject();
		tinDetails1.put("tinNum", tinNum);
		tinDetails1.put("noTinReason", noTinReason);
		tinDetails1.put("unableToGetTinRsn", unableToGetTinRsn);
		
		JSONObject tinDetails2 = new JSONObject();
		tinDetails2.put("tinNum", tinNum1);
		tinDetails2.put("noTinReason", noTinReason1);
		tinDetails2.put("unableToGetTinRsn", unableToGetTinRsn1);
		
		
		List<JSONObject> all2=new ArrayList<>();
		all2.add(tinDetails1);
		all2.add(tinDetails2);
		
		fatcaAndCRSInfo1.put("tinDetails", all2);
		fatcaAndCRSInfo1.put("taxCntries", all);
		
		body.put("fatcaAndCRSInfo", fatcaAndCRSInfo1);
		
		
		Framework.test = Framework.extent.createTest("API ID: API_31"+"<br>"+"API Description: Update Retail Prospects-FATCAandCRS"+"<br>"+" FATCAandCRS should be update successfully"+"<br>");
		//Framework.test = Framework.extent.createTest("<b>Api: API_31"+"<br>"+"API Description: Update Retail Prospects-FATCAandCRS"+"<br>"+"FATCAandCRS should be update successfully"+"<br>");
		Framework.test.assignCategory("Account Services");
		Framework.WriteExtentReport = Framework.test.createNode("patch request"+"<br><br>Expected result : "+"FATCAandCRS updated successfully with responce code 204 Not Content"+"<br>");
		 String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
			String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","38f293a11f74c58cdbc5af51d465eb37ad2642b8ad7495769ae9ef371d22848f")
				.header("Authorization",sTokenkey)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		//System.out.println("-------------"+response.getStatusCode());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==204)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iAccountServicesPass = iAccountServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iAccountServicesFail = iAccountServicesFail+1;
		}
		 
	}
	
	
	public static void API_32(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		
		//File src =new File("C://Users//xaatars//Desktop//Shahrukh//TestData.xlsx");
		
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		//String APIDescription = getColumnNumber(SPath, "Api ID",sTestCaseid);
		String eStringStatementFlag = getColumnNumber(SPath, "eStatementFlag",sTestCaseid);	
		String StringpromoOffersCommFlg = getColumnNumber(SPath, "promoOffersCommFlg",sTestCaseid);
		String StringpromosurveyFlg = getColumnNumber(SPath, "surveyFlg",sTestCaseid);
		String StringtermsAndConditions = getColumnNumber(SPath, "termsAndConditions",sTestCaseid);
		String StringconsentsAndDeclarations = getColumnNumber(SPath, "consentsAndDeclarations",sTestCaseid);
		String promoCommMode3 = getColumnNumber(SPath, "promoCommMode3",sTestCaseid);
		String promoCommMode4 = getColumnNumber(SPath, "promoCommMode4",sTestCaseid);
		String viewId = getColumnNumber(SPath, "viewId",sTestCaseid);
		boolean eStatementFlag = Boolean.parseBoolean(eStringStatementFlag);
		boolean promoOffersCommFlg = Boolean.parseBoolean(StringpromoOffersCommFlg);
		boolean surveyFlg = Boolean.parseBoolean(StringpromosurveyFlg);
		boolean termsAndConditions = Boolean.parseBoolean(StringtermsAndConditions);
		boolean consentsAndDeclarations = Boolean.parseBoolean(StringconsentsAndDeclarations);
		
		
		
		
		JSONObject body = new JSONObject();
		
		body.put("viewId", viewId);
		JSONObject kfsConsentAndDeclarations1 = new JSONObject();
		kfsConsentAndDeclarations1.put("eStatementFlag", eStatementFlag);
		kfsConsentAndDeclarations1.put("promoOffersCommFlg", promoOffersCommFlg);
		kfsConsentAndDeclarations1.put("surveyFlg", surveyFlg);
		kfsConsentAndDeclarations1.put("termsAndConditions", termsAndConditions);
		kfsConsentAndDeclarations1.put("consentsAndDeclarations", consentsAndDeclarations);
		
		
		
		JSONObject promoCommMode1 = new JSONObject();
		promoCommMode1.put("promoCommMode", promoCommMode3);
		
		JSONObject promoCommMode2 = new JSONObject();
		promoCommMode2.put("promoCommMode", promoCommMode4);
		
		
		List<JSONObject> all=new ArrayList<>();
		all.add(promoCommMode1);
		all.add(promoCommMode2);
		
		
		kfsConsentAndDeclarations1.put("promoCommMode", all);
		
		
		body.put("kfsConsentAndDeclarations", kfsConsentAndDeclarations1);
	
		
		
		Framework.test = Framework.extent.createTest("API ID: API_32"+"<br>"+"API Description: Update Retail Prospects-KFS Consents and Declarations"+"<br>"+" KFS Consents and Declarations should be update successfully"+"<br>");
		//Framework.test = Framework.extent.createTest("<b>Api: API_32"+"<br>"+"API Description: Update Retail Prospects-KFS Consents and Declarations"+"<br>"+"KFS Consents and Declarations should be update successfully"+"<br>");
		//Framework.test = Framework.extent.createTest("API ID: API_31\"+\"<br>\"+\"<br>"+"API Description: Update Retail Prospects-KFS Consents and Declarations"+"<br>"+"KFS Consents and Declarations should be update successfully"+"<br>");
		Framework.test.assignCategory("Account Services");
		Framework.WriteExtentReport = Framework.test.createNode("patch request"+"<br><br>Expected result : "+"KFS Consents and Declarations updated successfully with responce code 200 OK"+"<br>");
		
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","38f293a11f74c58cdbc5af51d465eb37ad2642b8ad7495769ae9ef371d22848f")
				.header("Authorization",sTokenkey)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		//System.out.println("-------------"+response.getStatusCode());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		
		
		//if(response.asString().equalsIgnoreCase("")&&response.getStatusCode()==204)
		if(response.getStatusCode()==200)
		{
			
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iAccountServicesPass = iAccountServicesPass+1;
			
			
			
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iAccountServicesFail = iAccountServicesFail+1;
			
			
		}
		
		//String fis1=new FileOutputStream(fis1);
		 
	}
	
	
	public static void API_33(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		
		//File src =new File("C://Users//xaatars//Desktop//Shahrukh//TestData.xlsx");
		
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		//String APIDescription = getColumnNumber(SPath, "Api ID",sTestCaseid);
		String investmentType = getColumnNumber(SPath, "investmentType",sTestCaseid);	
		String investmentTypeOthers = getColumnNumber(SPath, "investmentTypeOthers",sTestCaseid);
		String investmentDone = getColumnNumber(SPath, "investmentDone",sTestCaseid);
		String netMonthlyIncome = getColumnNumber(SPath, "netMonthlyIncome",sTestCaseid);
		String viewId = getColumnNumber(SPath, "viewId",sTestCaseid);
	
		JSONObject body = new JSONObject();
		
		body.put("viewId", viewId);
		JSONObject backgroundQuestions1 = new JSONObject();
	
		JSONObject investmentDetails2 = new JSONObject();
		investmentDetails2.put("investmentType", investmentType);
		investmentDetails2.put("investmentTypeOthers", investmentTypeOthers);
		investmentDetails2.put("investmentDone", investmentDone);
		investmentDetails2.put("netMonthlyIncome", netMonthlyIncome);
	
		List<JSONObject> investmentDetails1=new ArrayList<>();
		investmentDetails1.add(investmentDetails2);
	
		JSONObject declarationOfInvestment1 = new JSONObject();
		declarationOfInvestment1.put("investmentDetails", investmentDetails1);
		backgroundQuestions1.put("declarationOfInvestment", declarationOfInvestment1);
	
		body.put("backgroundQuestions", backgroundQuestions1);
		
	
		Framework.test = Framework.extent.createTest("API ID: API_33"+"<br>"+"API Description: BackgroundQuestions NEW Views - income view"+"<br>"+" income should be update successfully"+"<br>");
		//Framework.test = Framework.extent.createTest("<b>Api: API_32"+"<br>"+"API Description: Update Retail Prospects-KFS Consents and Declarations"+"<br>"+"KFS Consents and Declarations should be update successfully"+"<br>");
		//Framework.test = Framework.extent.createTest("API ID: API_31\"+\"<br>\"+\"<br>"+"API Description: Update Retail Prospects-KFS Consents and Declarations"+"<br>"+"KFS Consents and Declarations should be update successfully"+"<br>");
		Framework.test.assignCategory("Account Services");
		Framework.WriteExtentReport = Framework.test.createNode("patch request"+"<br><br>Expected result : "+"income updated successfully with responce code 204"+"<br>");
		
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","38f293a11f74c58cdbc5af51d465eb37ad2642b8ad7495769ae9ef371d22848f")
				.header("Authorization",sTokenkey)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		//System.out.println("-------------"+response.getStatusCode());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		
		
		//if(response.asString().equalsIgnoreCase("")&&response.getStatusCode()==204)
		if(response.getStatusCode()==204)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iAccountServicesPass = iAccountServicesPass+1;
		
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iAccountServicesFail = iAccountServicesFail+1;
		
		}
		
		//String fis1=new FileOutputStream(fis1);
		 
	}
	
	
	
	public static void API_34(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		
		//File src =new File("C://Users//xaatars//Desktop//Shahrukh//TestData.xlsx");
		
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		//String APIDescription = getColumnNumber(SPath, "Api ID",sTestCaseid);
		String investmentType = getColumnNumber(SPath, "investmentType",sTestCaseid);	
		String investmentTypeOthers = getColumnNumber(SPath, "investmentTypeOthers",sTestCaseid);
		String investmentDone = getColumnNumber(SPath, "investmentDone",sTestCaseid);
		String netMonthlyIncome = getColumnNumber(SPath, "netMonthlyIncome",sTestCaseid);
		String viewId = getColumnNumber(SPath, "viewId",sTestCaseid);
	
		
		JSONObject body = new JSONObject();
		
		body.put("viewId", viewId);
		JSONObject backgroundQuestions1 = new JSONObject();
	
		JSONObject investmentDetails2 = new JSONObject();
		investmentDetails2.put("investmentType", investmentType);
		investmentDetails2.put("investmentTypeOthers", investmentTypeOthers);
		investmentDetails2.put("investmentDone", investmentDone);
		investmentDetails2.put("netMonthlyIncome", netMonthlyIncome);
	
		List<JSONObject> investmentDetails1=new ArrayList<>();
		investmentDetails1.add(investmentDetails2);
	
		JSONObject declarationOfInvestment1 = new JSONObject();
		declarationOfInvestment1.put("investmentDetails", investmentDetails1);
		
		backgroundQuestions1.put("declarationOfInvestment", declarationOfInvestment1);
	
		body.put("backgroundQuestions", backgroundQuestions1);
		
	
		Framework.test = Framework.extent.createTest("API ID: API_34"+"<br>"+"API Description: Background Questions NEW Views - self employedview"+"<br>"+" Self Employed Details should be update successfully"+"<br>");
		//Framework.test = Framework.extent.createTest("<b>Api: API_32"+"<br>"+"API Description: Update Retail Prospects-KFS Consents and Declarations"+"<br>"+"KFS Consents and Declarations should be update successfully"+"<br>");
		//Framework.test = Framework.extent.createTest("API ID: API_31\"+\"<br>\"+\"<br>"+"API Description: Update Retail Prospects-KFS Consents and Declarations"+"<br>"+"KFS Consents and Declarations should be update successfully"+"<br>");
		Framework.test.assignCategory("Account Services");
		Framework.WriteExtentReport = Framework.test.createNode("patch request"+"<br><br>Expected result : "+"Self Employed Details updated successfully with responce code 204"+"<br>");
		
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","38f293a11f74c58cdbc5af51d465eb37ad2642b8ad7495769ae9ef371d22848f")
				.header("Authorization",sTokenkey)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		//System.out.println("-------------"+response.getStatusCode());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		
		
		//if(response.asString().equalsIgnoreCase("")&&response.getStatusCode()==204)
		if(response.getStatusCode()==204)
		{
			
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iAccountServicesPass = iAccountServicesPass+1;
			
			
			
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iAccountServicesFail = iAccountServicesFail+1;
			
			
		}
		
		//String fis1=new FileOutputStream(fis1);
		 
	}
	
	
	public static void API_35(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		//String APIDescription = getColumnNumber(SPath, "Api ID",sTestCaseid);
		//String notEmployedEarlier = getColumnNumber(SPath, "investmentType",sTestCaseid);	
		String StringnotEmployedEarlier= getColumnNumber(SPath, "notEmployedEarlier",sTestCaseid);
		boolean notEmployedEarlier =Boolean.parseBoolean(StringnotEmployedEarlier);
		System.out.println(notEmployedEarlier);
		String employerCode= getColumnNumber(SPath, "employerCode",sTestCaseid);
		System.out.println(employerCode);
		String employerName = getColumnNumber(SPath, "employerName",sTestCaseid);
		String employerNameOther = getColumnNumber(SPath, "employerNameOther",sTestCaseid);
		String positionHeld = getColumnNumber(SPath, "positionHeld",sTestCaseid);	
		String country = getColumnNumber(SPath, "country",sTestCaseid);
		String startYear = getColumnNumber(SPath, "startYear",sTestCaseid);
		System.out.println(employerCode);
		String StringnotEmployedEarlier1 = getColumnNumber(SPath, "notEmployedEarlier1",sTestCaseid);	
		boolean notEmployedEarlier1 =Boolean.parseBoolean(StringnotEmployedEarlier1);
		System.out.println(notEmployedEarlier1);
		String employerCode1 = getColumnNumber(SPath, "employerCode1",sTestCaseid);
		String employerName1 = getColumnNumber(SPath, "employerName1",sTestCaseid);
		String employerNameOther1 = getColumnNumber(SPath, "employerNameOther1",sTestCaseid);
		String positionHeld1 = getColumnNumber(SPath, "positionHeld1",sTestCaseid);	
		String country1 = getColumnNumber(SPath, "country1",sTestCaseid);
		String startYear1 = getColumnNumber(SPath, "startYear1",sTestCaseid);
		System.out.println(startYear1);
		String viewId = getColumnNumber(SPath, "viewId",sTestCaseid);
	
		
		JSONObject body = new JSONObject();
		
		body.put("viewId", viewId);
		System.out.println(body);
	
		JSONObject previousEmploymentDetails2 = new JSONObject();
		previousEmploymentDetails2.put("notEmployedEarlier", notEmployedEarlier);
		previousEmploymentDetails2.put("employerCode", employerCode);
		previousEmploymentDetails2.put("employerName", employerName);
		previousEmploymentDetails2.put("employerNameOther", employerNameOther);
		previousEmploymentDetails2.put("positionHeld", positionHeld);
		previousEmploymentDetails2.put("country", country);
		previousEmploymentDetails2.put("startYear", startYear);
		
		
		JSONObject previousEmploymentDetails3 = new JSONObject();
		previousEmploymentDetails3.put("notEmployedEarlier", notEmployedEarlier1);
		previousEmploymentDetails3.put("employerCode", employerCode1);
		previousEmploymentDetails3.put("employerName", employerName1);
		previousEmploymentDetails3.put("employerNameOther", employerNameOther1);
		previousEmploymentDetails3.put("positionHeld", positionHeld1);
		previousEmploymentDetails3.put("country", country1);
		previousEmploymentDetails3.put("startYear", startYear1);
	
		List<JSONObject> previousEmploymentDetails1=new ArrayList<>();
		previousEmploymentDetails1.add(previousEmploymentDetails2);
		previousEmploymentDetails1.add(previousEmploymentDetails3);
	
		JSONObject backgroundQuestions1 = new JSONObject();
		backgroundQuestions1.put("previousEmploymentDetails", previousEmploymentDetails1);
		
		
	
		body.put("backgroundQuestions", backgroundQuestions1);
		System.out.println(body);
	
		Framework.test = Framework.extent.createTest("API ID: API_35"+"<br>"+"API Description: Background Questions NEW Views - salaried view"+"<br>"+" Salaried Details should be update successfully"+"<br>");
		//Framework.test = Framework.extent.createTest("<b>Api: API_32"+"<br>"+"API Description: Update Retail Prospects-KFS Consents and Declarations"+"<br>"+"KFS Consents and Declarations should be update successfully"+"<br>");
		//Framework.test = Framework.extent.createTest("API ID: API_31\"+\"<br>\"+\"<br>"+"API Description: Update Retail Prospects-KFS Consents and Declarations"+"<br>"+"KFS Consents and Declarations should be update successfully"+"<br>");
		Framework.test.assignCategory("Account Services");
		Framework.WriteExtentReport = Framework.test.createNode("patch request"+"<br><br>Expected result : "+"Salaried Details updated successfully with responce code 204 "+"<br>");
		
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","38f293a11f74c58cdbc5af51d465eb37ad2642b8ad7495769ae9ef371d22848f")
				.header("Authorization",sTokenkey)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		//System.out.println("-------------"+response.getStatusCode());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		
		
		//if(response.asString().equalsIgnoreCase("")&&response.getStatusCode()==204)
		if(response.getStatusCode()==204)
		{
			
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iAccountServicesPass = iAccountServicesPass+1;
			
			
			
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iAccountServicesFail = iAccountServicesFail+1;
			
			
		}
		
		//String fis1=new FileOutputStream(fis1);
		 
	}
	
	
	public static void API_36(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		
		
		String fullName= getColumnNumber(SPath, "fullName",sTestCaseid);
		System.out.println(fullName);
		String countryCode= getColumnNumber(SPath, "countryCode",sTestCaseid);
		System.out.println(countryCode);
		String mobileNo= getColumnNumber(SPath, "mobileNo",sTestCaseid);
		
		
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
		String language= getColumnNumber(SPath, "language",sTestCaseid);
		
		
		
		JSONObject body = new JSONObject();
	
		
		
		JSONObject friendDetails1 = new JSONObject();
		friendDetails1.put("fullName", fullName); 
		friendDetails1.put("countryCode", countryCode);
		friendDetails1.put("mobileNo", mobileNo);
		
		body.put("friendDetails", friendDetails1);
		body.put("language", language);
		body.put("viewId", viewId);
		
		
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_36"+"<br>"+"API Description: Update Card Prospects Friend Details"+"<br>"+"Friend Details Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"Friend Details Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	
	public static void API_37(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		
		
		String taxCntry= getColumnNumber(SPath, "taxCntry",sTestCaseid);
		//System.out.println(fullName);
		String TINnumber= getColumnNumber(SPath, "TINnumber",sTestCaseid);
		//System.out.println(countryCode);
		String noTINReason= getColumnNumber(SPath, "noTINReason",sTestCaseid);
		
		
		String taxCntry1= getColumnNumber(SPath, "taxCntry1",sTestCaseid);
		//System.out.println(fullName);
		String TINnumber1= getColumnNumber(SPath, "TINnumber1",sTestCaseid);
		//System.out.println(countryCode);
		String noTINReason1= getColumnNumber(SPath, "noTINReason1",sTestCaseid);
		
		
		String taxCntry2= getColumnNumber(SPath, "taxCntry2",sTestCaseid);
		//System.out.println(fullName);
		String TINnumber2= getColumnNumber(SPath, "TINnumber2",sTestCaseid);
		//System.out.println(countryCode);
		String noTINReason2= getColumnNumber(SPath, "noTINReason2",sTestCaseid);
		
		
		String StringusRelation= getColumnNumber(SPath, "usRelation",sTestCaseid);
		
		boolean usRelation =Boolean.parseBoolean(StringusRelation);
		System.out.println(usRelation);
		String StringtaxPayableInOtherCntry= getColumnNumber(SPath, "taxPayableInOtherCntry",sTestCaseid);
		boolean taxPayableInOtherCntry =Boolean.parseBoolean(StringtaxPayableInOtherCntry);
		
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
		//String language= getColumnNumber(SPath, "language",sTestCaseid);
		
		
		JSONObject body = new JSONObject();
		
		
		
		JSONObject taxCntries1 = new JSONObject();
		taxCntries1.put("taxCntry", taxCntry); 
		taxCntries1.put("TINnumber", TINnumber);
		taxCntries1.put("noTINReason", noTINReason);
		
		JSONObject taxCntries2 = new JSONObject();
		taxCntries2.put("taxCntry", taxCntry1); 
		taxCntries2.put("TINnumber", TINnumber1);
		taxCntries2.put("noTINReason", noTINReason1);
		
		JSONObject taxCntries3 = new JSONObject();
		taxCntries3.put("taxCntry", taxCntry2); 
		taxCntries3.put("TINnumber", TINnumber2);
		taxCntries3.put("noTINReason", noTINReason2);
		
		
		List<JSONObject> taxCntries4=new ArrayList<>();
		taxCntries4.add(taxCntries1);
		taxCntries4.add(taxCntries2);
		taxCntries4.add(taxCntries3);
		
		
		JSONObject fatcaInfo1 = new JSONObject();
		fatcaInfo1.put("usRelation", usRelation); 
		fatcaInfo1.put("taxPayableInOtherCntry", taxPayableInOtherCntry); 
		fatcaInfo1.put("taxCntries", taxCntries4); 
		
		
		body.put("fatcaInfo", fatcaInfo1);
		body.put("viewId", viewId);
		
		System.out.println(body);
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_37"+"<br>"+"API Description: Update Card Prospects FATCA details"+"<br>"+" FATCA details Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"FATCA details Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	
	public static void API_38(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		
		
		String cntryOfBirth= getColumnNumber(SPath, "cntryOfBirth",sTestCaseid);
		//System.out.println(fullName);
		String previousDesignation= getColumnNumber(SPath, "previousDesignation",sTestCaseid);
		//System.out.println(countryCode);
		String relationsWithPEP= getColumnNumber(SPath, "relationsWithPEP",sTestCaseid);
		
		
		String pepName= getColumnNumber(SPath, "pepName",sTestCaseid);
		//System.out.println(fullName);
		String pepCountry= getColumnNumber(SPath, "pepCountry",sTestCaseid);
		//System.out.println(countryCode);
		String pepCity= getColumnNumber(SPath, "pepCity",sTestCaseid);
		
		String pepCategory= getColumnNumber(SPath, "pepCategory",sTestCaseid);
		
		String StringisPep= getColumnNumber(SPath, "isPep",sTestCaseid);
		
		boolean isPep =Boolean.parseBoolean(StringisPep);
		System.out.println(StringisPep);
		String StringtaxPayableInOtherCntry= getColumnNumber(SPath, "taxPayableInOtherCntry",sTestCaseid);
		boolean taxPayableInOtherCntry =Boolean.parseBoolean(StringtaxPayableInOtherCntry);
		
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
		//String language= getColumnNumber(SPath, "language",sTestCaseid);
		
		JSONObject body = new JSONObject();
		
		
		
		JSONObject pepInfo1 = new JSONObject();
		pepInfo1.put("pepCategory", pepCategory); 
		pepInfo1.put("previousDesignation", previousDesignation);
		pepInfo1.put("relationsWithPEP", relationsWithPEP);
		pepInfo1.put("pepName", pepName); 
		pepInfo1.put("pepCountry", pepCountry);
		pepInfo1.put("pepCity", pepCity);
		
		JSONObject personalDetails1 = new JSONObject();
		personalDetails1.put("cntryOfBirth", cntryOfBirth); 
		personalDetails1.put("isPep", isPep);
		personalDetails1.put("pepInfo", pepInfo1);
		
		
		
		
		
		body.put("personalDetails", personalDetails1);
		body.put("viewId", viewId);
		
		System.out.println(body);
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_38"+"<br>"+"API Description: Update Card Prospects Personal Details"+"<br>"+" Personal Details Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"Personal Details Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	
	
	public static void API_39(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		
		String cardSelected= getColumnNumber(SPath, "cardSelected",sTestCaseid);
		
		String skywardsnumber= getColumnNumber(SPath, "skywardsnumber",sTestCaseid);
		
		String offerFlag= getColumnNumber(SPath, "offerFlag",sTestCaseid);
		
		System.out.println(offerFlag);
		//String StringtaxPayableInOtherCntry= getColumnNumber(SPath, "taxPayableInOtherCntry",sTestCaseid);
		//boolean taxPayableInOtherCntry =Boolean.parseBoolean(StringtaxPayableInOtherCntry);
		
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
		//String language= getColumnNumber(SPath, "language",sTestCaseid);
	
		JSONObject body = new JSONObject();
		
		JSONObject acquisitionOfferDetails1 = new JSONObject();
		acquisitionOfferDetails1.put("cardSelected", cardSelected); 
		acquisitionOfferDetails1.put("skywardsnumber", skywardsnumber);
		acquisitionOfferDetails1.put("offerFlag", offerFlag);
		
		
		body.put("acquisitionOfferDetails", acquisitionOfferDetails1);
		body.put("viewId", viewId);
		
		System.out.println(body);
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_39"+"<br>"+"API Description: Update Card Prospects Acquisition Offer Details"+"<br>"+" Acquisition Offer Details Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"Acquisition Offer Details Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	public static void API_40(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		
		String creditShieldReqd= getColumnNumber(SPath, "creditShieldReqd",sTestCaseid);
		
		String rakProtectPlan= getColumnNumber(SPath, "rakProtectPlan",sTestCaseid);
		//String offerFlag= getColumnNumber(SPath, "offerFlag",sTestCaseid);
		String language= getColumnNumber(SPath, "language",sTestCaseid);
		
		System.out.println(language);
		//String StringtaxPayableInOtherCntry= getColumnNumber(SPath, "taxPayableInOtherCntry",sTestCaseid);
		//boolean taxPayableInOtherCntry =Boolean.parseBoolean(StringtaxPayableInOtherCntry);
		
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
		//String language= getColumnNumber(SPath, "language",sTestCaseid);
	
	
		
		JSONObject body = new JSONObject();
		
		JSONObject creditShieldRakProtectDetails1 = new JSONObject();
		creditShieldRakProtectDetails1.put("creditShieldReqd", creditShieldReqd); 
		creditShieldRakProtectDetails1.put("rakProtectPlan", rakProtectPlan);
	
		
		body.put("creditShieldRakProtectDetails", creditShieldRakProtectDetails1);
		body.put("viewId", viewId);
		body.put("language", language);
		
		System.out.println(body);
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_40"+"<br>"+"API Description: update Card Prospects Credit Shield RAKprotect"+"<br>"+" credit Shield Rak Protect Details Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"credit Shield Rak Protect Details Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	
	public static void API_41(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		
		String nameOnCard= getColumnNumber(SPath, "nameOnCard",sTestCaseid);
		
		String requestedAmt= getColumnNumber(SPath, "requestedAmt",sTestCaseid);
		String StringIPAconsent= getColumnNumber(SPath, "IPAconsent",sTestCaseid);
		boolean IPAconsent =Boolean.parseBoolean(StringIPAconsent);
		//String offerFlag= getColumnNumber(SPath, "offerFlag",sTestCaseid);
	//	String language= getColumnNumber(SPath, "language",sTestCaseid);
		
		System.out.println(IPAconsent);
		//String StringtaxPayableInOtherCntry= getColumnNumber(SPath, "taxPayableInOtherCntry",sTestCaseid);
		//boolean taxPayableInOtherCntry =Boolean.parseBoolean(StringtaxPayableInOtherCntry);
		
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
		//String language= getColumnNumber(SPath, "language",sTestCaseid);
	
		
		JSONObject body = new JSONObject();
		
		JSONObject IPADetails1 = new JSONObject();
		IPADetails1.put("nameOnCard", nameOnCard); 
		IPADetails1.put("requestedAmt", requestedAmt);
		IPADetails1.put("IPAconsent", IPAconsent);
		
		body.put("IPADetails", IPADetails1);
		body.put("viewId", viewId);
		//body.put("language", language);
		
		System.out.println(body);
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_41"+"<br>"+"API Description: Update Card Prospects IPA Amount"+"<br>"+" IPA Amount Details Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"IPA Amount Details Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	
	public static void API_42(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		
		//String offerFlag= getColumnNumber(SPath, "offerFlag",sTestCaseid);
	//	String language= getColumnNumber(SPath, "language",sTestCaseid);
		
		//String StringtaxPayableInOtherCntry= getColumnNumber(SPath, "taxPayableInOtherCntry",sTestCaseid);
		//boolean taxPayableInOtherCntry =Boolean.parseBoolean(StringtaxPayableInOtherCntry);
		
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
		//String language= getColumnNumber(SPath, "language",sTestCaseid);
	
		JSONObject body = new JSONObject();
		
		body.put("viewId", viewId);
		//body.put("language", language);
		
		System.out.println(body);
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_42"+"<br>"+"API Description: Update Card Prospects Lifestyle Question "+"<br>"+" Lifestyle Question Details Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"Lifestyle Question  Details Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	
	public static void API_43(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		
		
		String optionSelected= getColumnNumber(SPath, "optionSelected",sTestCaseid);
	   String coolingPeriodStartDate= getColumnNumber(SPath, "coolingPeriodStartDate",sTestCaseid);
		
		
		//String StringtaxPayableInOtherCntry= getColumnNumber(SPath, "taxPayableInOtherCntry",sTestCaseid);
		//boolean taxPayableInOtherCntry =Boolean.parseBoolean(StringtaxPayableInOtherCntry);
		
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
		//String language= getColumnNumber(SPath, "language",sTestCaseid);
		
		JSONObject body = new JSONObject();
		
		JSONObject coolingPeriodDetails1 = new JSONObject();
		coolingPeriodDetails1.put("optionSelected", optionSelected);
		coolingPeriodDetails1.put("coolingPeriodStartDate", coolingPeriodStartDate);
		
		body.put("coolingPeriodDetails", coolingPeriodDetails1);
		body.put("viewId", viewId);
		//body.put("language", language);
		
		System.out.println(body);
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_43"+"<br>"+"API Description: update Card Prospects Cooling Period"+"<br>"+" cooling Period Details Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"cooling Period Details Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	
	public static void API_44(String sTestCaseidval) throws Exception
	{
		
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String maritalStatusCode= getColumnNumber(SPath, "maritalStatusCode",sTestCaseid);
		
		String maritalStatusDescriptionEN= getColumnNumber(SPath, "maritalStatusDescriptionEN",sTestCaseid);
		String genderCode= getColumnNumber(SPath, "genderCode",sTestCaseid);
		String genderDescriptionEN= getColumnNumber(SPath, "genderDescriptionEN",sTestCaseid);
		String placeOfBirth= getColumnNumber(SPath, "placeOfBirth",sTestCaseid);
		String mothersName= getColumnNumber(SPath, "mothersName",sTestCaseid);
		String residencyNumber= getColumnNumber(SPath, "residencyNumber",sTestCaseid);
		String residencyIssuePlace= getColumnNumber(SPath, "residencyIssuePlace",sTestCaseid);
		
		String residencyIssueDate= getColumnNumber(SPath, "residencyIssueDate",sTestCaseid);
		String residencyExpiryDate= getColumnNumber(SPath, "residencyExpiryDate",sTestCaseid);
		
		String sponsorName= getColumnNumber(SPath, "sponsorName",sTestCaseid);
		String daysToExpiry= getColumnNumber(SPath, "daysToExpiry",sTestCaseid);
		String fullName= getColumnNumber(SPath, "fullName",sTestCaseid);
		
		String nationalityFull= getColumnNumber(SPath, "nationalityFull",sTestCaseid);
		String nationalityIso2= getColumnNumber(SPath, "nationalityIso2",sTestCaseid);
		String nationalityIso3= getColumnNumber(SPath, "nationalityIso3",sTestCaseid);
		String eidCardNumber= getColumnNumber(SPath, "eidCardNumber",sTestCaseid);
		
		String eidIssueDate= getColumnNumber(SPath, "eidIssueDate",sTestCaseid);
		String eidExpiryDate= getColumnNumber(SPath, "eidExpiryDate",sTestCaseid);
		
		String daysToExpiry1= getColumnNumber(SPath, "daysToExpiry",sTestCaseid);
		
		String dob= getColumnNumber(SPath, "dob",sTestCaseid);
		
		String documentNumber= getColumnNumber(SPath, "documentNumber",sTestCaseid);
		
		String documentType= getColumnNumber(SPath, "documentType",sTestCaseid);
		String expiry= getColumnNumber(SPath, "expiry",sTestCaseid);
		String firstName= getColumnNumber(SPath, "firstName",sTestCaseid);
		String fullName1= getColumnNumber(SPath, "fullName",sTestCaseid);
		String issued= getColumnNumber(SPath, "issued",sTestCaseid);
		String lastName= getColumnNumber(SPath, "lastName",sTestCaseid);
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
		String language= getColumnNumber(SPath, "language",sTestCaseid);
		//String ppIssuingAuthority= getColumnNumber(SPath, "ppIssuingAuthority",sTestCaseid);

		
		//System.out.println(ppIssuingAuthority);
		JSONObject body = new JSONObject();
	
		
		
		JSONObject efrDetails1 = new JSONObject();
		efrDetails1.put("maritalStatusCode", maritalStatusCode); 
		efrDetails1.put("maritalStatusDescriptionEN", maritalStatusDescriptionEN);
		efrDetails1.put("genderCode", genderCode);
		efrDetails1.put("genderDescriptionEN", genderDescriptionEN);
		efrDetails1.put("placeOfBirth", placeOfBirth);
		efrDetails1.put("mothersName", mothersName);
		efrDetails1.put("residencyNumber", residencyNumber);
		efrDetails1.put("residencyIssuePlace", residencyIssuePlace);
		efrDetails1.put("residencyIssueDate", residencyIssueDate);
		efrDetails1.put("residencyExpiryDate", residencyExpiryDate);
		efrDetails1.put("sponsorName", sponsorName);
		
		JSONObject emidDetails1 = new JSONObject();
		emidDetails1.put("daysToExpiry", daysToExpiry); 
		emidDetails1.put("fullName", fullName);
		emidDetails1.put("nationalityFull", nationalityFull);
		emidDetails1.put("nationalityIso2", nationalityIso2);
		emidDetails1.put("nationalityIso3", nationalityIso3);
		emidDetails1.put("eidCardNumber", eidCardNumber);
		emidDetails1.put("eidIssueDate", eidIssueDate);
		emidDetails1.put("eidExpiryDate", eidExpiryDate);
		
		efrDetails1.put("emidDetails", emidDetails1);
		
		JSONObject passportDetails1 = new JSONObject();
		passportDetails1.put("daysToExpiry", daysToExpiry1); 
		passportDetails1.put("dob", dob);
		passportDetails1.put("documentNumber", documentNumber);
		passportDetails1.put("documentType", documentType);
		passportDetails1.put("expiry", expiry);
		passportDetails1.put("firstName", firstName);
		passportDetails1.put("fullName", fullName1);
		passportDetails1.put("issued", issued);
		passportDetails1.put("lastName", lastName);
		//passportDetails1.put("ppIssuingAuthority", ppIssuingAuthority);
		
		efrDetails1.put("passportDetails", passportDetails1);
		
		
		
		
		body.put("efrDetails", efrDetails1);
		body.put("viewId", viewId);
		body.put("language", language);
		
	
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_44"+"<br>"+"API Description: update Card Prospects efrdeatils Age Restriction"+"<br>"+" efrdeatils Age Restriction Details Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"efrdeatils Age Restriction Details Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		System.out.println(""+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
		
	public static void API_45(String sTestCaseidval) throws Exception
	{
		
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String maritalStatusCode= getColumnNumber(SPath, "maritalStatusCode",sTestCaseid);
		
		String maritalStatusDescriptionEN= getColumnNumber(SPath, "maritalStatusDescriptionEN",sTestCaseid);
		String genderCode= getColumnNumber(SPath, "genderCode",sTestCaseid);
		String genderDescriptionEN= getColumnNumber(SPath, "genderDescriptionEN",sTestCaseid);
		String placeOfBirth= getColumnNumber(SPath, "placeOfBirth",sTestCaseid);
		String mothersName= getColumnNumber(SPath, "mothersName",sTestCaseid);
		String residencyNumber= getColumnNumber(SPath, "residencyNumber",sTestCaseid);
		String residencyIssuePlace= getColumnNumber(SPath, "residencyIssuePlace",sTestCaseid);
		
		String residencyIssueDate= getColumnNumber(SPath, "residencyIssueDate",sTestCaseid);
		String residencyExpiryDate= getColumnNumber(SPath, "residencyExpiryDate",sTestCaseid);
		
		String sponsorName= getColumnNumber(SPath, "sponsorName",sTestCaseid);
		String daysToExpiry= getColumnNumber(SPath, "daysToExpiry",sTestCaseid);
		String fullName= getColumnNumber(SPath, "fullName",sTestCaseid);
		
		String nationalityFull= getColumnNumber(SPath, "nationalityFull",sTestCaseid);
		String nationalityIso2= getColumnNumber(SPath, "nationalityIso2",sTestCaseid);
		String nationalityIso3= getColumnNumber(SPath, "nationalityIso3",sTestCaseid);
		String eidCardNumber= getColumnNumber(SPath, "eidCardNumber",sTestCaseid);
		
		String eidIssueDate= getColumnNumber(SPath, "eidIssueDate",sTestCaseid);
		String eidExpiryDate= getColumnNumber(SPath, "eidExpiryDate",sTestCaseid);
		
		String daysToExpiry1= getColumnNumber(SPath, "daysToExpiry",sTestCaseid);
		
		String dob= getColumnNumber(SPath, "dob",sTestCaseid);
		
		String documentNumber= getColumnNumber(SPath, "documentNumber",sTestCaseid);
		
		String documentType= getColumnNumber(SPath, "documentType",sTestCaseid);
		String expiry= getColumnNumber(SPath, "expiry",sTestCaseid);
		String firstName= getColumnNumber(SPath, "firstName",sTestCaseid);
		String fullName1= getColumnNumber(SPath, "fullName",sTestCaseid);
		String issued= getColumnNumber(SPath, "issued",sTestCaseid);
		String lastName= getColumnNumber(SPath, "lastName",sTestCaseid);
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
		String language= getColumnNumber(SPath, "language",sTestCaseid);
		//String ppIssuingAuthority= getColumnNumber(SPath, "ppIssuingAuthority",sTestCaseid);

		
		//System.out.println(ppIssuingAuthority);
		JSONObject body = new JSONObject();
	
		
		
		JSONObject efrDetails1 = new JSONObject();
		efrDetails1.put("maritalStatusCode", maritalStatusCode); 
		efrDetails1.put("maritalStatusDescriptionEN", maritalStatusDescriptionEN);
		efrDetails1.put("genderCode", genderCode);
		efrDetails1.put("genderDescriptionEN", genderDescriptionEN);
		efrDetails1.put("placeOfBirth", placeOfBirth);
		efrDetails1.put("mothersName", mothersName);
		efrDetails1.put("residencyNumber", residencyNumber);
		efrDetails1.put("residencyIssuePlace", residencyIssuePlace);
		efrDetails1.put("residencyIssueDate", residencyIssueDate);
		efrDetails1.put("residencyExpiryDate", residencyExpiryDate);
		efrDetails1.put("sponsorName", sponsorName);
		
		JSONObject emidDetails1 = new JSONObject();
		emidDetails1.put("daysToExpiry", daysToExpiry); 
		emidDetails1.put("fullName", fullName);
		emidDetails1.put("nationalityFull", nationalityFull);
		emidDetails1.put("nationalityIso2", nationalityIso2);
		emidDetails1.put("nationalityIso3", nationalityIso3);
		emidDetails1.put("eidCardNumber", eidCardNumber);
		emidDetails1.put("eidIssueDate", eidIssueDate);
		emidDetails1.put("eidExpiryDate", eidExpiryDate);
		
		efrDetails1.put("emidDetails", emidDetails1);
		
		JSONObject passportDetails1 = new JSONObject();
		passportDetails1.put("daysToExpiry", daysToExpiry1); 
		passportDetails1.put("dob", dob);
		passportDetails1.put("documentNumber", documentNumber);
		passportDetails1.put("documentType", documentType);
		passportDetails1.put("expiry", expiry);
		passportDetails1.put("firstName", firstName);
		passportDetails1.put("fullName", fullName1);
		passportDetails1.put("issued", issued);
		passportDetails1.put("lastName", lastName);
		//passportDetails1.put("ppIssuingAuthority", ppIssuingAuthority);
		
		efrDetails1.put("passportDetails", passportDetails1);
		
		
		
		
		body.put("efrDetails", efrDetails1);
		body.put("viewId", viewId);
		body.put("language", language);
		
	
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_45"+"<br>"+"API Description: updateCardProspects efrdeatils Restricted nationality"+"<br>"+" efrdeatils Restricted nationality Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"efrdeatils Restricted nationality Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		System.out.println(""+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	public static void API_46(String sTestCaseidval) throws Exception
	{
		
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String maritalStatusCode= getColumnNumber(SPath, "maritalStatusCode",sTestCaseid);
		
		String maritalStatusDescriptionEN= getColumnNumber(SPath, "maritalStatusDescriptionEN",sTestCaseid);
		String genderCode= getColumnNumber(SPath, "genderCode",sTestCaseid);
		String genderDescriptionEN= getColumnNumber(SPath, "genderDescriptionEN",sTestCaseid);
		String placeOfBirth= getColumnNumber(SPath, "placeOfBirth",sTestCaseid);
		String mothersName= getColumnNumber(SPath, "mothersName",sTestCaseid);
		String residencyNumber= getColumnNumber(SPath, "residencyNumber",sTestCaseid);
		String residencyIssuePlace= getColumnNumber(SPath, "residencyIssuePlace",sTestCaseid);
		
		String residencyIssueDate= getColumnNumber(SPath, "residencyIssueDate",sTestCaseid);
		String residencyExpiryDate= getColumnNumber(SPath, "residencyExpiryDate",sTestCaseid);
		
		String sponsorName= getColumnNumber(SPath, "sponsorName",sTestCaseid);
		String daysToExpiry= getColumnNumber(SPath, "daysToExpiry",sTestCaseid);
		String fullName= getColumnNumber(SPath, "fullName",sTestCaseid);
		
		String nationalityFull= getColumnNumber(SPath, "nationalityFull",sTestCaseid);
		String nationalityIso2= getColumnNumber(SPath, "nationalityIso2",sTestCaseid);
		String nationalityIso3= getColumnNumber(SPath, "nationalityIso3",sTestCaseid);
		String eidCardNumber= getColumnNumber(SPath, "eidCardNumber",sTestCaseid);
		
		String eidIssueDate= getColumnNumber(SPath, "eidIssueDate",sTestCaseid);
		String eidExpiryDate= getColumnNumber(SPath, "eidExpiryDate",sTestCaseid);
		
		String daysToExpiry1= getColumnNumber(SPath, "daysToExpiry",sTestCaseid);
		
		String dob= getColumnNumber(SPath, "dob",sTestCaseid);
		
		String documentNumber= getColumnNumber(SPath, "documentNumber",sTestCaseid);
		
		String documentType= getColumnNumber(SPath, "documentType",sTestCaseid);
		String expiry= getColumnNumber(SPath, "expiry",sTestCaseid);
		String firstName= getColumnNumber(SPath, "firstName",sTestCaseid);
		String fullName1= getColumnNumber(SPath, "fullName",sTestCaseid);
		String issued= getColumnNumber(SPath, "issued",sTestCaseid);
		String lastName= getColumnNumber(SPath, "lastName",sTestCaseid);
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
		String language= getColumnNumber(SPath, "language",sTestCaseid);
		//String ppIssuingAuthority= getColumnNumber(SPath, "ppIssuingAuthority",sTestCaseid);

		
		//System.out.println(ppIssuingAuthority);
		JSONObject body = new JSONObject();
	
		
		
		JSONObject efrDetails1 = new JSONObject();
		efrDetails1.put("maritalStatusCode", maritalStatusCode); 
		efrDetails1.put("maritalStatusDescriptionEN", maritalStatusDescriptionEN);
		efrDetails1.put("genderCode", genderCode);
		efrDetails1.put("genderDescriptionEN", genderDescriptionEN);
		efrDetails1.put("placeOfBirth", placeOfBirth);
		efrDetails1.put("mothersName", mothersName);
		efrDetails1.put("residencyNumber", residencyNumber);
		efrDetails1.put("residencyIssuePlace", residencyIssuePlace);
		efrDetails1.put("residencyIssueDate", residencyIssueDate);
		efrDetails1.put("residencyExpiryDate", residencyExpiryDate);
		efrDetails1.put("sponsorName", sponsorName);
		
		JSONObject emidDetails1 = new JSONObject();
		emidDetails1.put("daysToExpiry", daysToExpiry); 
		emidDetails1.put("fullName", fullName);
		emidDetails1.put("nationalityFull", nationalityFull);
		emidDetails1.put("nationalityIso2", nationalityIso2);
		emidDetails1.put("nationalityIso3", nationalityIso3);
		emidDetails1.put("eidCardNumber", eidCardNumber);
		emidDetails1.put("eidIssueDate", eidIssueDate);
		emidDetails1.put("eidExpiryDate", eidExpiryDate);
		
		efrDetails1.put("emidDetails", emidDetails1);
		
		JSONObject passportDetails1 = new JSONObject();
		passportDetails1.put("daysToExpiry", daysToExpiry1); 
		passportDetails1.put("dob", dob);
		passportDetails1.put("documentNumber", documentNumber);
		passportDetails1.put("documentType", documentType);
		passportDetails1.put("expiry", expiry);
		passportDetails1.put("firstName", firstName);
		passportDetails1.put("fullName", fullName1);
		passportDetails1.put("issued", issued);
		passportDetails1.put("lastName", lastName);
		//passportDetails1.put("ppIssuingAuthority", ppIssuingAuthority);
		
		efrDetails1.put("passportDetails", passportDetails1);
		
		
		
		
		body.put("efrDetails", efrDetails1);
		body.put("viewId", viewId);
		body.put("language", language);
		
	
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_46"+"<br>"+"API Description: updateCardProspects efrdeatils Blacklist"+"<br>"+" efrdeatils Blacklist  Should be update successfully"+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"efrdeatils Blacklist Updated Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		System.out.println(""+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	
	public static void API_47(String sTestCaseidval) throws Exception
	{
		String SPath = "C://Users//xaatars//Desktop//Shahrukh//TestData1.xlsx";
		String sTestCaseid = sTestCaseidval;//;"Api_32(updateRetailProspects-KFS Consents and Declarations)";
		String sFieldValue = getColumnNumber(SPath, "URL",sTestCaseid);
		String emailId= getColumnNumber(SPath, "emailId",sTestCaseid);
		
		String employmentType= getColumnNumber(SPath, "employmentType",sTestCaseid);
		String mobileNo= getColumnNumber(SPath, "mobileNo",sTestCaseid);
		String name= getColumnNumber(SPath, "name",sTestCaseid);
		String monthlyIncome= getColumnNumber(SPath, "monthlyIncome",sTestCaseid);
		String currency= getColumnNumber(SPath, "currency",sTestCaseid);
		String cardType= getColumnNumber(SPath, "cardType",sTestCaseid);
		String StringcallMeBack= getColumnNumber(SPath, "callMeBack",sTestCaseid);
		boolean callMeBack=Boolean.parseBoolean(StringcallMeBack);
		String viewId= getColumnNumber(SPath, "viewId",sTestCaseid);
		String language= getColumnNumber(SPath, "language",sTestCaseid);
		
		//System.out.println(dateOfJoining);
		JSONObject body = new JSONObject();
	
		body.put("emailId", emailId);
		
		JSONObject cardSelection1 = new JSONObject();
		cardSelection1.put("employmentType", employmentType); 
		cardSelection1.put("mobileNo", mobileNo);
		cardSelection1.put("name", name);
		cardSelection1.put("monthlyIncome", monthlyIncome);
		cardSelection1.put("currency", currency);
		cardSelection1.put("cardType", cardType);
		cardSelection1.put("callMeBack", callMeBack);
		body.put("cardSelection", cardSelection1);
		body.put("language", language);
		body.put("viewId", viewId);
		
		
		//given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("API ID: API_47"+"<br>"+"API Description: Update Card Prospects- Self-employed "+"<br>"+" list of card should be updated as per Self-employed selection "+"<br>");
		Framework.test.assignCategory("Card Services");
		Framework.WriteExtentReport = Framework.test.createNode("Post request"+"<br><br>Expected result : "+"list of card should be updated as per Self-employed selection Successfully with responce code 200 OK"+"<br>");
		String sRequest = sFieldValue;
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Requestbody:</b> "+body);
		//Response response = get(sRequest);
		try {
		Response response = given()
				.contentType("application/json")
				.accept("application/json")
				//.header("Authorization","a45e7250f2b06ad85f35bb4c24292f12e009088d57efa05aa9a036faeab71ea4")
				.header("Authorization",sTokenkey)
				//.body(userDetails)
				.body(body.toJSONString())
				.when()
				.patch(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println(response.getStatusCode());
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iCardServicesPass = iCardServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iCardServicesFail = iCardServicesFail+1;
		}
		}
		catch(Exception e)
		   {
			Framework.CreateResults(false, "Api response code is "+e);
			iCardServicesFail = iCardServicesFail+1;
		   }
		 
	}
	
	
	public static void Auth()
	{
		Framework.test = Framework.extent.createTest("API ID: API_02"+"<br>"+"API Description: Get the data for list accout services"+"<br>"+"Account services data list should be fetched successfully"+"<br>");
		Framework.test.assignCategory("Account Services");
		Framework.WriteExtentReport = Framework.test.createNode("Get request"+"<br><br>Expected result : "+"Get response hould be fectched successfully with responce code 200"+"<br>");
		String sRequest = "http://10.15.24.34:8087/openAuth/v2/oauth/token";
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		//Response response = get(sRequest);
		Response response = given()
				.contentType("application/x-www-form-urlencoded")
				//.accept("application/json")
				//.header("Authorization","38f293a11f74c58cdbc5af51d465eb37ad2642b8ad7495769ae9ef371d22848f")
				//.header("Authorization",sTokenkey)
				.body("{\r\n" + 
						"\"grant_type\":\"password\",\r\n" + 
						"\"username\":\"VTUSER\",\r\n" + 
						"\"password\": \"p@king1\",\r\n" + 
						"\"client_id\": \"0e50fbe72ae115ae5812\",\r\n" + 
						"\"bank_id\":\"RAK\",\r\n" + 
						"\"channel_id\":\"I\",\r\n" + 
						"\"client_secret\":\"693916a12ad010cb79b064b0f35d76405cb3df588a8280ae49ac2eec7f2c\",\r\n" + 
						"\"language_id\": \"001\",\r\n" + 
						"\"login_flag\":\"2\",\r\n" + 
						"\"login_type\":\"1\",\r\n" + 
						"\"statemode\":\"N\",\r\n" + 
						"\"refresh_token\":\"e998961112ab485d51384c433cf2eafc042490597ebc76e7607327217b5a28f9\"\r\n" + 
						"\r\n" + 
						"}")
				.when()
				.post(sRequest)
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		//System.out.println("-------------"+response.asString());
		//System.out.println("-------------"+response.getBody().asString());
		//System.out.println("-------------"+response.getStatusCode());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==200)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
			iAccountServicesPass = iAccountServicesPass+1;
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
			iAccountServicesFail = iAccountServicesFail+1;
		}
		 
	}
	
	
	public static void API_static()
	{
		//Response response = given()
		//.get("https://reqres.in/api/users?page=2");
		Framework.test = Framework.extent.createTest("TestCase ID: API_01"+"<br>"+"TestCase Description: Checking the API response"+"<br>"+"Expected Result:The api should give successful response"+"<br>");
		Framework.test.assignCategory("Cards");
		Framework.WriteExtentReport = Framework.test.createNode("reqres.in response API_01"+"<br><br>Expected result : "+"The api should give successful response"+"<br>");
		String sRequest = "https://reqres.in/api/users?page=2";
		Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
		//Response response = get(sRequest);
		Response response = given()
		.get(sRequest);
		System.out.println("-------------"+response.asString());
		System.out.println(response.jsonPath().getString("per_page"));
		System.out.println(response.jsonPath().getString("data.email[0]"));
		//System.out.println("-------------"+response.getBody().asString());
		int iResponseCode = response.getStatusCode();
		System.out.println("-------------"+iResponseCode);
		System.out.println("-------------"+response.getStatusLine());
		//System.out.println("-------------"+response.getHeader("content-type"));
		//System.out.println("-------------"+response.getTime()+" Seconds");
		
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
		Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
		Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
		Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
		if(response.getStatusCode()==204)
		{
			Framework.CreateResults(true, "Api response code is "+iResponseCode);
		}
		else
		{
			Framework.CreateResults(false, "Api response code is "+iResponseCode);
		}
		 
	}
	
	

	public static void API_post()
	{
	
	Framework.test = Framework.extent.createTest("TestCase ID: API_01"+"<br>"+"TestCase Description: Checking the API response"+"<br>"+"Expected Result:The api should give successful response"+"<br>");
	Framework.test.assignCategory("Cards");
	Framework.WriteExtentReport = Framework.test.createNode("reqres.in response API_01"+"<br><br>Expected result : "+"The api should give successful response"+"<br>");
	String sRequest = "https://reqres.in/api/users?page=2";
	Framework.WriteExtentReport.log(Status.INFO, "<b>Request:</b> "+sRequest);
	//Response response = get(sRequest);
	
	
	List<Map<String,Object>> userAddresss = new ArrayList<>();
	
	Map<String,Object> shippingAddress = new HashMap<>();
	shippingAddress.put("city", "Mumbai");
	shippingAddress.put("country", "India");
	shippingAddress.put("state", "Maharashtra");
	shippingAddress.put("pincode", "123456");
	
	userAddresss.add(shippingAddress);
	
	Map<String,Object> userDetails = new HashMap<>();
	userDetails.put("firstname", "Anjani");
	userDetails.put("lastname", "deo");
	userDetails.put("company", "QK");
	userDetails.put("id", "123456");
	
	userDetails.put("addresses", userAddresss);
	
	
	Response response = given()
			.contentType("application/json")
			.accept("application/json")
			.body(userDetails)
			.when()
			//.post(CONTEXT_PATH + "/users")
			.post()
			.then()
			.statusCode(200)
			.contentType("application/json")
			.extract()
			.response();
	
	String sUserid = response.jsonPath().getString("userId");
	System.out.println(sUserid);
			
	//.get(sRequest);
	System.out.println("-------------"+response.asString());
	System.out.println(response.jsonPath().getString("per_page"));
	System.out.println(response.jsonPath().getString("data.email[0]"));
	//System.out.println("-------------"+response.getBody().asString());
	int iResponseCode = response.getStatusCode();
	System.out.println("-------------"+iResponseCode);
	System.out.println("-------------"+response.getStatusLine());
	//System.out.println("-------------"+response.getHeader("content-type"));
	//System.out.println("-------------"+response.getTime()+" Seconds");
	
	Framework.WriteExtentReport.log(Status.INFO, "<b>Response:</b> "+response.asString());
	Framework.WriteExtentReport.log(Status.INFO, "<b>Status code:</b> "+iResponseCode);
	Framework.WriteExtentReport.log(Status.INFO, "<b>Content type:</b> "+response.getHeader("content-type"));
	Framework.WriteExtentReport.log(Status.INFO, "<b>Response time:</b> "+response.getTime()+" ms");
	if(response.getStatusCode()== 204)
	{
	Framework.CreateResults(true, "Api response code is "+iResponseCode);
	}
	else
	{
	Framework.CreateResults(false, "Api response code is "+iResponseCode);
	}
	
	}
	
	
	public static void aa()
	{
	   /* Map<String,Object> userDetails = new HashMap<>();
		userDetails.put("fullName", "Bhatabai");
		userDetails.put("emailId", "bhatabai.patil@rakbank.ae");
		userDetails.put("countryCode", "971");
		userDetails.put("mobileNo", "504963477");
		userDetails.put("prodCategory", "C");
		userDetails.put("personOfDetermination" , "true");
		userDetails.put("typeOfDisability", "others");
		userDetails.put("disabilityRemarks", "test");
		userDetails.put("language", "EN");
		userDetails.put("agentCode", "jhsbvddddddddddd44444444444");
		userDetails.put("viewId", "createView");*/
		Response response = given()
				.contentType("application/json")
				//.contentType(ContentType.URLENC)
				.accept("application/json")
				.header("Authorization","72f48dda7e36002e2e7ea249ca62c682669e1372a10d844af85a99efb169a550")
				.body("{\r\n" + 
						"  \"fullName\": \"Bhatabai Patil\",\r\n" + 
						"  \"emailId\": \"bhatabai.patil@rakbank.ae\",\r\n" + 
						"  \"countryCode\": 971,\r\n" + 
						"  \"mobileNo\": \"504963477\",\r\n" + 
						"  \"prodCategory\": \"C\",\r\n" + 
						"  \"personOfDetermination\": \"true\",\r\n" + 
						"  \"typeOfDisability\": \"others\",\r\n" + 
						"  \"disabilityRemarks\": \"test\",\r\n" + 
						"  \"language\": \"EN\",\r\n" + 
						"  \"agentCode\": \"5412315645644544gjghjhj44444444444444444444444444444444444444444444444444444444444442222222222222255555555555\",\r\n" + 
						"  \"viewId\": \"createView\"\r\n" + 
						"}\r\n" + 
						"")
				/*.formParam("grant_type", "password")
				.formParam("username", "VTUSER")
				.formParam("password", "p@king1")
				.formParam("client_id", "0e50fbe72ae115ae5812")
				.formParam("bank_id", "RAK")
				.formParam("channel_id", "I")
				.formParam("client_secret", "693916a12ad010cb79b064b0f35d76405cb3df588a8280ae49ac2eec7f2c")
				.formParam("language_id", "001")
				.formParam("login_flag", "2")
				.formParam("login_type", "1")
				.formParam("statemode", "N")
				.formParam("refresh_token", "e998961112ab485d51384c433cf2eafc042490597ebc76e7607327217b5a28f9")*/
				.when()
				.post("http://10.15.24.32:8096/dehRetail/rest/v1/banks/RAK/retail/products/cards/prospects")
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		
		System.out.println(response.asString());
	}
	
	public static void aa1()
	{
	   /* Map<String,Object> userDetails = new HashMap<>();
		userDetails.put("fullName", "Bhatabai");
		userDetails.put("emailId", "bhatabai.patil@rakbank.ae");
		userDetails.put("countryCode", "971");
		userDetails.put("mobileNo", "504963477");
		userDetails.put("prodCategory", "C");
		userDetails.put("personOfDetermination" , "true");
		userDetails.put("typeOfDisability", "others");
		userDetails.put("disabilityRemarks", "test");
		userDetails.put("language", "EN");
		userDetails.put("agentCode", "jhsbvddddddddddd44444444444");
		userDetails.put("viewId", "createView");*/
		Response response = given()
				.contentType("application/x-www-form-urlencoded")
				//.contentType("application/json")
				//.contentType(ContentType.URLENC)
				.accept("application/json")
				.header("Authorization","926c1886d18a90b22163dd86e28d428164111edeecb27efcbc882b54546c992f")
				.body("{\r\n" + 
						"	\"grant_type\": \"password\",\r\n" + 
						"	\"username\":\"VTUSER\",\r\n" + 
						"	\"password\" : \"p@king1\",\r\n" + 
						"	\"client_id\" : \"0e50fbe72ae115ae5812\",\r\n" + 
						"	\"bank_id\": \"RAK\",\r\n" + 
						"	\"channel_id\": \"I\",\r\n" + 
						"	\"client_secret\": \"693916a12ad010cb79b064b0f35d76405cb3df588a8280ae49ac2eec7f2c\",\r\n" + 
						"	\"language_id\": \"001\",\r\n" + 
						"	\"login_flag\": \"2\",\r\n" + 
						"	\"login_type\" : \"1\",\r\n" + 
						"	\"statemode\" : \"N\",\r\n" + 
						"	\"refresh_token\": \"e998961112ab485d51384c433cf2eafc042490597ebc76e7607327217b5a28f9\"\r\n" + 
						"}")
				/*.formParam("grant_type", "password")
				.formParam("username", "VTUSER")
				.formParam("password", "p@king1")
				.formParam("client_id", "0e50fbe72ae115ae5812")
				.formParam("bank_id", "RAK")
				.formParam("channel_id", "I")
				.formParam("client_secret", "693916a12ad010cb79b064b0f35d76405cb3df588a8280ae49ac2eec7f2c")
				.formParam("language_id", "001")
				.formParam("login_flag", "2")
				.formParam("login_type", "1")
				.formParam("statemode", "N")
				.formParam("refresh_token", "e998961112ab485d51384c433cf2eafc042490597ebc76e7607327217b5a28f9")*/
				.when()
				.post("http://10.15.24.34:8087/openAuth/v2/oauth/token")
				.then()
				//.statusCode(200)
				//.contentType("application/json")
				.extract()
				.response();
		
		System.out.println(response.asString());
	}
	
	
	public static String getColumnNumber(String FilePath,String sColumName,String sTestcaseID) throws IOException
	{
		File src =new File(FilePath);
		FileInputStream fis=new FileInputStream(src);
		XSSFWorkbook wb=new XSSFWorkbook(fis);
		XSSFSheet sheet1=wb.getSheetAt(0);
		int iCloumnCount = 0;
		for(int iColCount=0;iColCount<=1000;iColCount++)
		{
			String sCloumnvalues = sheet1.getRow(0).getCell(iColCount).getStringCellValue();
			if(sCloumnvalues.equalsIgnoreCase(sColumName))
			{
				iCloumnCount=iColCount;
				break;
			}
		}
		
		int iRowCount = 0;
		for(int iRCount=0;iRCount<=1000;iRCount++)
		{
			String sRowvalues = sheet1.getRow(iRCount).getCell(0).getStringCellValue();
		   if(sRowvalues.equalsIgnoreCase(sTestcaseID))
			{
				iRowCount=iRCount;
				break;
			}
		}
		
		String sFieldValue = sheet1.getRow(iRowCount).getCell(iCloumnCount).getStringCellValue();
		
		sFieldValue = sFieldValue.replace("'","");
		
		
		
		
		wb.close();
		return sFieldValue;
		
		
	}
	
}
